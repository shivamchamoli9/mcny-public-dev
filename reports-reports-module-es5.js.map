{"version":3,"sources":["node_modules/file-saver/dist/FileSaver.min.js","src/app/admin/reports/components/cancelled-report/cancelled-report.component.html","src/app/admin/reports/components/high-ed-users/high-ed-users.component.html","src/app/admin/reports/components/inquiry-reports/inquiry-reports.component.html","src/app/admin/reports/components/new-requests/new-requests.component.html","src/app/admin/reports/components/providers-listing/provider-detail/provider-detail.component.html","src/app/admin/reports/components/providers-listing/providers-listing.component.html","src/app/admin/reports/components/rejected-requests/rejected-requests.component.html","src/app/admin/reports/components/sources/sources.component.html","src/app/admin/reports/components/two-days-report/two-days-report.component.html","src/app/admin/reports/components/cancelled-report/cancelled-report.component.css","src/app/admin/reports/components/cancelled-report/cancelled-report.component.ts","src/app/admin/reports/components/high-ed-users/high-ed-users.component.css","src/app/admin/reports/components/high-ed-users/high-ed-users.component.ts","src/app/admin/reports/components/inquiry-reports/inquiry-reports.component.css","src/app/admin/reports/components/inquiry-reports/inquiry-reports.component.ts","src/app/admin/reports/components/new-requests/new-requests.component.css","src/app/admin/reports/components/new-requests/new-requests.component.ts","src/app/admin/reports/components/providers-listing/provider-detail/provider-detail.component.css","src/app/admin/reports/components/providers-listing/provider-detail/provider-detail.component.ts","src/app/admin/reports/components/providers-listing/providers-listing.component.css","src/app/admin/reports/components/providers-listing/providers-listing.component.ts","src/app/admin/reports/components/rejected-requests/rejected-requests.component.css","src/app/admin/reports/components/rejected-requests/rejected-requests.component.ts","src/app/admin/reports/components/sources/sources.component.css","src/app/admin/reports/components/sources/sources.component.ts","src/app/admin/reports/components/two-days-report/two-days-report.component.css","src/app/admin/reports/components/two-days-report/two-days-report.component.ts","src/app/admin/reports/reports-routing.module.ts","src/app/admin/reports/reports.module.ts","src/app/admin/reports/services/reports.services.ts"],"names":[],"mappings":"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","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Cancelled Requests\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"getCancelledReports(1)\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div\\n          class=\\\"table-responsive entity-table\\\"\\n          *ngIf=\\\"allRequests.length; else nodata\\\"\\n        >\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"\\\">#</th>\\n                <th class=\\\"\\\">Client Name</th>\\n                <th class=\\\"\\\">Email</th>\\n                <th class=\\\"\\\">Contact</th>\\n                <th>Cancelled At</th>\\n                <th>Cancelled By</th>\\n                <th>Currently Assigned</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                <td>{{ request.patientDetails.clientName | titlecase }}</td>\\n                <td>{{ request.patientDetails.email }}</td>\\n                <td>\\n                  {{ request.patientDetails.countryCode }}\\n                  {{ request.patientDetails.phoneNumber }}\\n                </td>\\n                <td>{{ request.cancelTime | date: \\\"medium\\\" }}</td>\\n                <td>{{ request.assignedDoctor.name | titlecase }}</td>\\n                <td>\\n                  {{\\n                    request.assignedNow?.name\\n                      ? request.assignedNow?.name\\n                      : (\\\"Not Assigned\\\" | titlecase)\\n                  }}\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <app-pagination\\n            [totalRecords]=\\\"totalRecords\\\"\\n            [data]=\\\"allRequests\\\"\\n            [currentPage]=\\\"currentPage\\\"\\n            (clickedPage)=\\\"clickPage($event)\\\"\\n          >\\n          </app-pagination>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\\n<!-- <div class=\\\"col-md-4 col-lg-4 chartBox\\\">\\n      <div class=\\\"text-center\\\">\\n        <h3 class=\\\"H300 semibold\\\">Sources</h3>\\n        <div style=\\\"display: block;\\\">\\n          <canvas baseChart [data]=\\\"_sPieChartData\\\" [labels]=\\\"_sPieChartLable\\\" [chartType]=\\\"_sPieChartType\\\"\\n            [options]=\\\"chartOptions\\\" [plugins]=\\\"charPlugin\\\" [legend]=\\\"chartLegend\\\">\\n          </canvas>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-4 col-lg-4 chartBox\\\">\\n      <div class=\\\"text-center\\\">\\n        <h3 class=\\\"H300 semibold\\\">All Requests</h3>\\n        <div style=\\\"display: block;\\\">\\n          <canvas baseChart [data]=\\\"_allPieChartData\\\" [labels]=\\\"_allPieChartLable\\\" [chartType]=\\\"_allPieChartType\\\"\\n            [options]=\\\"chartOptions\\\" [plugins]=\\\"charPlugin\\\" [legend]=\\\"chartLegend\\\">\\n          </canvas>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-4 col-lg-4 chartBox\\\">\\n      <div class=\\\"text-center\\\">\\n        <h3 class=\\\"H300 semibold\\\">Last 2 Days</h3>\\n        <div style=\\\"display: block;\\\">\\n          <canvas baseChart [data]=\\\"_last2daysPieChartData\\\" [labels]=\\\"_last2daysPieChartLable\\\"\\n            [chartType]=\\\"_last2daysPieChartType\\\" [options]=\\\"chartOptions\\\" [plugins]=\\\"charPlugin\\\" [legend]=\\\"chartLegend\\\">\\n          </canvas>\\n        </div>\\n      </div>\\n    </div> -->\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        POP High Utilizer\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"getHighUserOfED(1)\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"table-responsive entity-table\\\">\\n          <div\\n            class=\\\"table-responsive entity-table\\\"\\n            *ngIf=\\\"allRequests?.length; else nodata\\\"\\n          >\\n            <table class=\\\"table table-striped\\\">\\n              <thead>\\n                <tr>\\n                  <th class=\\\"\\\">#</th>\\n                  <th class=\\\"\\\">Name</th>\\n                  <th class=\\\"\\\">Email</th>\\n                  <th class=\\\"\\\">Contact</th>\\n                  <th>Reqeust Date</th>\\n                  <th>Accepted By</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                  <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                  <td>{{ request.clientName | titlecase }}</td>\\n                  <td>{{ request.email }}</td>\\n                  <td>\\n                    {{ request.countryCode }}\\n                    {{ request.phoneNumber }}\\n                  </td>\\n                  <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                  <td>\\n                    {{\\n                      request?.enquiryRequests[0]?.assignedDoctor?.name || \\\"N/A\\\"\\n                    }}\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <app-pagination\\n              [totalRecords]=\\\"totalRecords\\\"\\n              [data]=\\\"allRequests\\\"\\n              [currentPage]=\\\"currentPage\\\"\\n              (clickedPage)=\\\"clickPage($event)\\\"\\n            >\\n            </app-pagination>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap bg-grey\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        All Requests\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"refreshData()\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"selectAType pt-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-1 col-lg-1 chartBox\\\"></div>\\n            <div class=\\\"col-md-10 col-lg-10 chartBox\\\">\\n              <div class=\\\"text-center\\\">\\n                <h3 class=\\\"H300 semibold\\\">Inquiries</h3>\\n                <div style=\\\"display: block\\\">\\n                  <canvas\\n                    baseChart\\n                    [datasets]=\\\"_pBarChartData\\\"\\n                    [labels]=\\\"_pBarChartLabels\\\"\\n                    [chartType]=\\\"_pBarChartType\\\"\\n                    [options]=\\\"chartOptions\\\"\\n                    [plugins]=\\\"charPlugin\\\"\\n                    [legend]=\\\"chartLegend\\\"\\n                  >\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1 col-lg-1 chartBox\\\"></div>\\n            <div class=\\\"col-md-12 col-lg-12 note\\\">\\n              Note: Listing can have multiple values, as Single Inquiry was sent\\n              to multiple Clinicains. Showing details with individual provider.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Active</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Assigned Provider</th>\\n                      <th>DOB</th>\\n                      <th>Insurance Provider</th>\\n                      <th>Insurance Number</th>\\n                      <th>City</th>\\n                      <th>Date</th>\\n                      <th>Download</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails.countryCode }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n\\n                      <td>{{ request.assignedDoctor.name | titlecase }}</td>\\n                      <td>\\n                        {{ request.patientDetails.dob }}\\n                      </td>\\n                      <td>\\n                        {{\\n                          request.patientDetails?.insuranceProvider?.insurance\\n                        }}\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.insuranceNumber }}\\n                      </td>\\n                      <td>{{ request.patientDetails.city | titlecase }}</td>\\n                      <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Pending</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Pending Since</th>\\n                      <th>Assigned Provider</th>\\n                      <th>DOB</th>\\n                      <th>Insurance Provider</th>\\n                      <th>Insurance Number</th>\\n                      <th>City</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails.countryCode }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n\\n                      <td>\\n                        {{\\n                          request.patientDetails.enquiryRequests[0]\\n                            ?.assignedDoctor.name\\n                        }}\\n                        <div\\n                          ngbDropdown\\n                          class=\\\"d-inline-block\\\"\\n                          style=\\\"cursor: pointer\\\"\\n                          *ngIf=\\\"\\n                            request.patientDetails.enquiryRequests.length > 1\\n                          \\\"\\n                        >\\n                          <span\\n                            style=\\\"cursor: pointer\\\"\\n                            id=\\\"dropdownBasic1\\\"\\n                            ngbDropdownToggle\\n                          >\\n                            ...\\n                          </span>\\n                          <div\\n                            class=\\\"ngbToggleDropdown\\\"\\n                            ngbDropdownMenu\\n                            aria-labelledby=\\\"dropdownBasic1\\\"\\n                          >\\n                            <div\\n                              class=\\\"dropdownItem\\\"\\n                              *ngFor=\\\"\\n                                let doc of request.patientDetails\\n                                  ?.enquiryRequests;\\n                                let i = index\\n                              \\\"\\n                            >\\n                              {{ doc.assignedDoctor?.name }}\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.dob }}\\n                      </td>\\n                      <td>\\n                        {{\\n                          request.patientDetails?.insuranceProvider?.insurance\\n                        }}\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.insuranceNumber }}\\n                      </td>\\n                      <td>{{ request.patientDetails.city | titlecase }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"3\\\">\\n            <a ngbNavLink>Cancelled</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Cancelled At</th>\\n                      <th>Cancelled By</th>\\n                      <th>DOB</th>\\n                      <th>Insurance Provider</th>\\n                      <th>Insurance Number</th>\\n                      <th>City</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ request.patientDetails.clientName }}</td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails.countryCode }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.cancelTime | date: \\\"medium\\\" }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.enquiryRequests[0]\\n                            ?.assignedDoctor.name\\n                        }}\\n                        <div\\n                          ngbDropdown\\n                          class=\\\"d-inline-block\\\"\\n                          style=\\\"cursor: pointer\\\"\\n                          *ngIf=\\\"\\n                            request.patientDetails.enquiryRequests.length > 1\\n                          \\\"\\n                        >\\n                          <span\\n                            style=\\\"cursor: pointer\\\"\\n                            id=\\\"dropdownBasic1\\\"\\n                            ngbDropdownToggle\\n                          >\\n                            ...\\n                          </span>\\n                          <div\\n                            class=\\\"ngbToggleDropdown\\\"\\n                            ngbDropdownMenu\\n                            aria-labelledby=\\\"dropdownBasic1\\\"\\n                          >\\n                            <div\\n                              class=\\\"dropdownItem\\\"\\n                              *ngFor=\\\"\\n                                let doc of request.patientDetails\\n                                  ?.enquiryRequests;\\n                                let i = index\\n                              \\\"\\n                            >\\n                              {{ doc.assignedDoctor?.name }}\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.dob }}\\n                      </td>\\n                      <td>\\n                        {{\\n                          request.patientDetails?.insuranceProvider?.insurance\\n                        }}\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.insuranceNumber }}\\n                      </td>\\n                      <td>{{ request.patientDetails.city | titlecase }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"4\\\">\\n            <a ngbNavLink>Rejected</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Rejected At</th>\\n                      <th>Rejected By</th>\\n                      <th>DOB</th>\\n                      <th>Insurance Provider</th>\\n                      <th>Insurance Number</th>\\n                      <th>City</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails.countryCode }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.rejectTime | date: \\\"medium\\\" }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.enquiryRequests[0]\\n                            ?.assignedDoctor.name\\n                        }}\\n                        <div\\n                          ngbDropdown\\n                          class=\\\"d-inline-block\\\"\\n                          style=\\\"cursor: pointer\\\"\\n                          *ngIf=\\\"\\n                            request.patientDetails?.enquiryRequests?.length > 1\\n                          \\\"\\n                        >\\n                          <span\\n                            style=\\\"cursor: pointer\\\"\\n                            id=\\\"dropdownBasic1\\\"\\n                            ngbDropdownToggle\\n                          >\\n                            ...\\n                          </span>\\n                          <div\\n                            class=\\\"ngbToggleDropdown\\\"\\n                            ngbDropdownMenu\\n                            aria-labelledby=\\\"dropdownBasic1\\\"\\n                          >\\n                            <div\\n                              class=\\\"dropdownItem\\\"\\n                              *ngFor=\\\"\\n                                let doc of request.patientDetails\\n                                  ?.enquiryRequests;\\n                                let i = index\\n                              \\\"\\n                            >\\n                              {{ doc.assignedDoctor?.name }}\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.dob }}\\n                      </td>\\n                      <td>\\n                        {{\\n                          request.patientDetails?.insuranceProvider?.insurance\\n                        }}\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.insuranceNumber }}\\n                      </td>\\n                      <td>{{ request.patientDetails.city | titlecase }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Data</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        New Requests\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <!-- <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"getCancelledReports(1)\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div> -->\\n            </div>\\n          </div>\\n        </div>\\n        <div\\n          class=\\\"table-responsive entity-table\\\"\\n          *ngIf=\\\"allRequests?.length; else nodata\\\"\\n        >\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"\\\">#</th>\\n                <th class=\\\"\\\">Client Name</th>\\n                <th class=\\\"\\\">Email</th>\\n                <th class=\\\"\\\">Contact</th>\\n                <th>Request Date</th>\\n                <th>DOB</th>\\n                <th>Insurance Provider</th>\\n                <th>Insurance Number</th>\\n                <th>City</th>\\n                <th>File</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                <td>\\n                  {{ request?.clientName | titlecase }}\\n                </td>\\n                <td>{{ request?.email }}</td>\\n                <td>\\n                  {{ request?.countryCode }}\\n                  {{ request?.phoneNumber }}\\n                </td>\\n                <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n\\n                <td>\\n                  {{ request?.dob | date: \\\"yyyy-MM-dd\\\" }}\\n                </td>\\n                <td>\\n                  {{ request?.insuranceProvider?.insurance }}\\n                </td>\\n                <td>\\n                  {{ request?.insuranceNumber }}\\n                </td>\\n                <td>{{ request?.city | titlecase }}</td>\\n                <td>\\n                  <a\\n                    class=\\\"blue-btn col-white\\\"\\n                    href=\\\"{{ bucketUrl }}/{{ request?.insuranceAsset?.path }}{{\\n                      request?.insuranceAsset?.extension\\n                    }}\\\"\\n                  >\\n                    <!-- <a class=\\\"blue-btn col-white\\\" (click)=\\\"download()\\\"> -->\\n                    Download\\n                  </a>\\n                </td>\\n                <td>\\n                  <div\\n                    style=\\\"display: flex\\\"\\n                    *ngIf=\\\"request.status !== 'ACTIVE'; else activeCon\\\"\\n                  >\\n                    <button\\n                      class=\\\"green-btn\\\"\\n                      (click)=\\\"changeStatus(request.id, 'ACTIVE')\\\"\\n                    >\\n                      Approve\\n                    </button>\\n                    <button\\n                      class=\\\"red-btn ml-10\\\"\\n                      (click)=\\\"changeStatus(request.id, 'REJECTED')\\\"\\n                    >\\n                      Reject\\n                    </button>\\n                  </div>\\n                  <ng-template #activeCon\\n                    ><span class=\\\"col-green\\\">Approved</span></ng-template\\n                  >\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <app-pagination\\n            [totalRecords]=\\\"totalRecords\\\"\\n            [data]=\\\"allRequests\\\"\\n            [currentPage]=\\\"currentPage\\\"\\n            (clickedPage)=\\\"clickPage($event)\\\"\\n          >\\n          </app-pagination>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Provider's Report : {{ title }}\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"selectAType pt-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n            <div class=\\\"col-md-8 col-lg-8 chartBox\\\">\\n              <div class=\\\"text-center\\\">\\n                <h3 class=\\\"H300 semibold\\\">Download and Cases</h3>\\n                <div\\n                  style=\\\"display: block\\\"\\n                  *ngIf=\\\"_chartLabels.length && _chartData.length\\\"\\n                >\\n                  <canvas\\n                    baseChart\\n                    [data]=\\\"_chartData\\\"\\n                    [labels]=\\\"_chartLabels\\\"\\n                    [chartType]=\\\"_charType\\\"\\n                    [options]=\\\"chartOptions\\\"\\n                    [plugins]=\\\"charPlugin\\\"\\n                    [legend]=\\\"chartLegend\\\"\\n                  >\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n            <div class=\\\"col-md-12 col-lg-12 note\\\" *ngIf=\\\"active == 2\\\">\\n              Note: Listing can have more values than graph, as single case\\n              could have been recieved mutiple times as in case of Cancellation\\n              from previous provider.\\n            </div>\\n            <div class=\\\"col-md-12 col-lg-12 note\\\" *ngIf=\\\"active == 1\\\">\\n              Note: Values in graph and details in listing can be different, as\\n              provider might have cancelled the case after downloading!.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Downloaded</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"doctor && doctor.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Accepted At</th>\\n                      <th>Appointment Scheduled</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of doctor; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.phoneNumber\\n                            ? request.patientDetails.countryCode\\n                            : \\\"\\\"\\n                        }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>\\n                        {{ request.acceptTime | date: \\\"medium\\\" }}\\n                      </td>\\n                      <td>\\n                        <span\\n                          *ngIf=\\\"request?.appointmentTime; else noAptTime\\\"\\n                          >{{ request?.appointmentTime | date: \\\"medium\\\" }}</span\\n                        >\\n                        <ng-template #noAptTime>Not Scheduled</ng-template>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctor\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Total Cases Received</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"doctor && doctor.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Pending Since</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of doctor; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.phoneNumber\\n                            ? request.patientDetails.countryCode\\n                            : \\\"\\\"\\n                        }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctor\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"3\\\">\\n            <a ngbNavLink>Cancelled</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"doctor && doctor.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Cancelled At</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of doctor; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.phoneNumber\\n                            ? request.patientDetails.countryCode\\n                            : \\\"\\\"\\n                        }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.cancelTime | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctor\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"4\\\">\\n            <a ngbNavLink>Rejected</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"doctor && doctor.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Rejected At</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of doctor; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.phoneNumber\\n                            ? request.patientDetails.countryCode\\n                            : \\\"\\\"\\n                        }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.rejectTime | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctor\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Data</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Providers Report\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"getProvidersList(1)\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"table-responsive entity-table\\\">\\n          <!-- <ul\\n            ngbNav\\n            #nav=\\\"ngbNav\\\"\\n            [(activeId)]=\\\"active\\\"\\n            (activeIdChange)=\\\"activeIdChange(active)\\\"\\n            class=\\\"nav-tabs\\\"\\n          >\\n            <li [ngbNavItem]=\\\"1\\\">\\n              <a ngbNavLink>Providers Report</a>\\n              <ng-template ngbNavContent> -->\\n          <div\\n            class=\\\"table-responsive entity-table\\\"\\n            *ngIf=\\\"allRequests?.length; else nodata\\\"\\n          >\\n            <table class=\\\"table table-striped\\\">\\n              <thead>\\n                <tr>\\n                  <th class=\\\"\\\">#</th>\\n                  <th class=\\\"\\\">Name</th>\\n                  <th class=\\\"\\\">Email</th>\\n                  <th class=\\\"\\\">Contact</th>\\n                  <th class=\\\"\\\">Gender</th>\\n                  <th>Joined At</th>\\n                  <th>Availability</th>\\n                  <th>More</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                  <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                  <td>{{ request.name | titlecase }}</td>\\n                  <td>{{ request.email }}</td>\\n                  <td>{{ request.phoneNumber }}</td>\\n                  <td>{{ request.gender | titlecase }}</td>\\n                  <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                  <td>{{ request.isAvailable ? \\\"Yes\\\" : \\\"No\\\" }}</td>\\n                  <td>\\n                    <a\\n                      [routerLink]=\\\"['/admin/reports/provider-detail']\\\"\\n                      [queryParams]=\\\"{\\n                        id: request.id,\\n                        title: request.name\\n                      }\\\"\\n                      class=\\\"btn btn-info\\\"\\n                      ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    </a>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <app-pagination\\n              [totalRecords]=\\\"totalRecords\\\"\\n              [data]=\\\"allRequests\\\"\\n              [currentPage]=\\\"currentPage\\\"\\n              (clickedPage)=\\\"clickPage($event)\\\"\\n            >\\n            </app-pagination>\\n          </div>\\n          <!-- </ng-template>\\n            </li>\\n\\n            <li [ngbNavItem]=\\\"2\\\">\\n              <a ngbNavLink>Schedule Report</a>\\n              <ng-template ngbNavContent>\\n                <div\\n                  class=\\\"table-responsive entity-table\\\"\\n                  *ngIf=\\\"allRequests?.length; else nodata\\\"\\n                >\\n                  <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                      <tr>\\n                        <th class=\\\"\\\">#</th>\\n                        <th class=\\\"\\\">Name</th>\\n                        <th class=\\\"\\\">Email</th>\\n                        <th class=\\\"\\\">Contact</th>\\n                        <th class=\\\"\\\">Gender</th>\\n                        <th class=\\\"\\\">Zip</th>\\n                        <th>Joined At</th>\\n                        <th>Availability</th>\\n                        <th>More</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                        <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                        <td>{{ request.name | titlecase }}</td>\\n                        <td>{{ request.email }}</td>\\n                        <td>{{ request.phoneNumber }}</td>\\n                        <td>{{ request.gender | titlecase }}</td>\\n                        <td>{{ request.zipcode }}</td>\\n                        <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                        <td>{{ request.isAvailable ? \\\"Yes\\\" : \\\"No\\\" }}</td>\\n                        <td>\\n                          <a\\n                            routerLink=\\\"/admin/reports/provider-detail\\\"\\n                            [queryParams]=\\\"{\\n                              id: request.id,\\n                              title: request.name\\n                            }\\\"\\n                            class=\\\"btn btn-info\\\"\\n                            ><i\\n                              class=\\\"fa fa-info-circle\\\"\\n                              aria-hidden=\\\"true\\\"\\n                            ></i>\\n                          </a>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                  <app-pagination\\n                    [totalRecords]=\\\"totalRecords\\\"\\n                    [data]=\\\"allRequests\\\"\\n                    [currentPage]=\\\"currentPage\\\"\\n                    (clickedPage)=\\\"clickPage($event)\\\"\\n                  >\\n                  </app-pagination>\\n                </div>\\n              </ng-template>\\n            </li>\\n          </ul> -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Rejected Requests\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            ></div>\\n          </div>\\n        </div>\\n        <div\\n          class=\\\"table-responsive entity-table\\\"\\n          *ngIf=\\\"allRequests?.length; else nodata\\\"\\n        >\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"\\\">#</th>\\n                <th class=\\\"\\\">Client Name</th>\\n                <th class=\\\"\\\">Email</th>\\n                <th class=\\\"\\\">Contact</th>\\n                <th>Request Date</th>\\n                <th>DOB</th>\\n                <th>Insurance Provider</th>\\n                <th>Insurance Number</th>\\n                <th>City</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                <td>\\n                  {{ request?.clientName | titlecase }}\\n                </td>\\n                <td>{{ request?.email }}</td>\\n                <td>\\n                  {{ request?.countryCode }}\\n                  {{ request?.phoneNumber }}\\n                </td>\\n                <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n\\n                <td>\\n                  {{ request?.dob | date: \\\"yyyy-MM-dd\\\" }}\\n                </td>\\n                <td>\\n                  {{ request?.insuranceProvider?.insurance }}\\n                </td>\\n                <td>\\n                  {{ request?.insuranceNumber }}\\n                </td>\\n                <td>{{ request?.city | titlecase }}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <app-pagination\\n            [totalRecords]=\\\"totalRecords\\\"\\n            [data]=\\\"allRequests\\\"\\n            [currentPage]=\\\"currentPage\\\"\\n            (clickedPage)=\\\"clickPage($event)\\\"\\n          >\\n          </app-pagination>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Sources - Details\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"yyyy-mm-dd\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"yyyy-mm-dd\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"refreshData()\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"selectAType pt-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n            <div class=\\\"col-md-8 col-lg-8 chartBox\\\">\\n              <div class=\\\"text-center\\\">\\n                <h3 class=\\\"H300 semibold\\\">All Sources</h3>\\n                <div style=\\\"display: block\\\">\\n                  <canvas\\n                    baseChart\\n                    [data]=\\\"_sPieChartData\\\"\\n                    [labels]=\\\"_sPieChartLable\\\"\\n                    [chartType]=\\\"_sPieChartType\\\"\\n                    [options]=\\\"chartOptions\\\"\\n                    [plugins]=\\\"charPlugin\\\"\\n                    [legend]=\\\"chartLegend\\\"\\n                  >\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Social Media</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Care Cordinator</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"3\\\">\\n            <a ngbNavLink>Psychology Today</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"4\\\">\\n            <a ngbNavLink>Flyer/Advertisement</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"5\\\">\\n            <a ngbNavLink>Others</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Last 2 Days Report\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"selectAType pt-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n            <div class=\\\"col-md-8 col-lg-8 chartBox\\\">\\n              <div class=\\\"text-center\\\">\\n                <h3 class=\\\"H300 semibold\\\">Last 2 Days</h3>\\n                <div style=\\\"display: block\\\">\\n                  <canvas\\n                    baseChart\\n                    [colors]=\\\"chartColors\\\"\\n                    [data]=\\\"_last2daysPieChartData\\\"\\n                    [labels]=\\\"_last2daysPieChartLable\\\"\\n                    [chartType]=\\\"_last2daysPieChartType\\\"\\n                    [options]=\\\"chartOptions\\\"\\n                    [plugins]=\\\"charPlugin\\\"\\n                    [legend]=\\\"chartLegend\\\"\\n                  >\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Active</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Accepted At</th>\\n                      <th>Assigned Provider</th>\\n                      <th>Appointment Scheduled</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails?.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.countryCode }}\\n                        {{ request.patientDetails?.phoneNumber }}\\n                      </td>\\n                      <td>\\n                        {{ request.acceptTime | date: \\\"medium\\\" }}\\n                      </td>\\n                      <td>\\n                        {{ request.assignedDoctor?.name | titlecase }}\\n                      </td>\\n                      <td>\\n                        <span *ngIf=\\\"request.appointmentTime; else noAptTime\\\">{{\\n                          request?.appointmentTime | date: \\\"medium\\\"\\n                        }}</span>\\n                        <ng-template #noAptTime>Not Scheduled</ng-template>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Pending</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Pending Since</th>\\n                      <th>Provider(s) Notified</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails?.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.countryCode }}\\n                        {{ request.patientDetails?.phoneNumber }}\\n                      </td>\\n                      <td>\\n                        {{ request.createdAt | date: \\\"medium\\\" }}\\n                      </td>\\n                      <td>\\n                        {{ request?.patientDetails?.enquiryRequests?.length }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"3\\\">\\n            <a ngbNavLink>Cancelled</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Cancelled At</th>\\n                      <th>Cancelled By</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails?.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.countryCode }}\\n                        {{ request.patientDetails?.phoneNumber }}\\n                      </td>\\n                      <td>{{ request?.cancelTime | date: \\\"medium\\\" }}</td>\\n                      <td>\\n                        {{ request.assignedDoctor?.name | titlecase }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"4\\\">\\n            <a ngbNavLink>Rejected</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Rejected At</th>\\n                      <th>Rejected By</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails?.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.countryCode }}\\n                        {{ request.patientDetails?.phoneNumber }}\\n                      </td>\\n                      <td>\\n                        {{ request?.rejectTime | date: \\\"medium\\\" }}\\n                      </td>\\n                      <td>\\n                        {{ request.assignedDoctor?.name | titlecase }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL2NhbmNlbGxlZC1yZXBvcnQvY2FuY2VsbGVkLXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFLFFBQVE7RUFDUixTQUFTO0VBQ1QsWUFBWTtFQUNaLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7O0VBRUUsa0NBQWtDO0VBQ2xDLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQjtBQUNGOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQiwwQkFBMEI7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9yZXBvcnRzL2NvbXBvbmVudHMvY2FuY2VsbGVkLXJlcG9ydC9jYW5jZWxsZWQtcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0QVR5cGUgLmRldGFpbFdyYXBDb21tb24ge1xuICBoZWlnaHQ6IDIwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uc2VsZWN0QVR5cGUgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmRldGFpbFdyYXBDb21tb24ge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHBhZGRpbmc6IDI1cHg7XG4gIG1hcmdpbjogMjVweDtcbiAgYmFja2dyb3VuZDogI2ZkZmRmZDtcbiAgYm9yZGVyOiAycHggc29saWQgI2U4ZThlODtcbn1cblxuLmRldGFpbFdyYXBDb21tb24gLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbn1cblxuLmRldGFpbFdyYXBDb21tb24uYm9yZGVyLUNBQ0NDRiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNjYWNjY2Y7XG59XG5cbi5IMzAwIHtcbiAgZm9udC1zaXplOiAxLjNyZW07XG4gIGNvbG9yOiAjMWIzNDZhO1xufVxuXG4uY2hhcnRCb3gge1xuICBwYWRkaW5nOiAyMHB4IDEwcHhcbn1cblxuLmZvcm0tZ3JvdXAuaGlkZGVuIHtcbiAgd2lkdGg6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uY3VzdG9tLWRheSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMC4xODVyZW0gMC4yNXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDJyZW07XG4gIHdpZHRoOiAycmVtO1xufVxuXG4uY3VzdG9tLWRheS5mb2N1c2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcbn1cblxuLmN1c3RvbS1kYXkucmFuZ2UsXG4uY3VzdG9tLWRheTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyLCAxMTcsIDIxNik7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmN1c3RvbS1kYXkuZmFkZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDExNywgMjE2LCAwLjUpO1xufVxuXG4ubm9EYXRhIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDEwJVxufVxuXG4ubm90ZSB7XG4gIHBhZGRpbmc6IDIwcHggMjBweDtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDAuODVyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-cancelled-report\",\n  templateUrl: \"./cancelled-report.component.html\",\n  styleUrls: [\"./cancelled-report.component.css\"],\n})\nexport class CancelledReportComponent implements OnInit {\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  currentPage = 1;\n  totalRecords = 0;\n\n  allRequests = [];\n  constructor(\n    private reportService: ReportService,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter\n  ) {\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.getCancelledReports();\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getCancelledReports();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  getCancelledReports(pageNo?) {\n    this.currentPage = pageNo ? pageNo : this.currentPage;\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getCancelledReports(params).subscribe((data) => {\n      this.allRequests = data.data ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px;\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%;\\n}\\n\\n.right-content-Wrap {\\n  padding: 30px 30px;\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL2hpZ2gtZWQtdXNlcnMvaGlnaC1lZC11c2Vycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsUUFBUTtFQUNSLFNBQVM7RUFDVCxZQUFZO0VBQ1osVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTs7RUFFRSxrQ0FBa0M7RUFDbEMsWUFBWTtBQUNkOztBQUVBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL2hpZ2gtZWQtdXNlcnMvaGlnaC1lZC11c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdEFUeXBlIC5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnNlbGVjdEFUeXBlIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAyNXB4O1xuICBtYXJnaW46IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZGZkZmQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlOGU4ZTg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIC5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uLmJvcmRlci1DQUNDQ0Yge1xuICBib3JkZXI6IDJweCBzb2xpZCAjY2FjY2NmO1xufVxuXG4uSDMwMCB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBjb2xvcjogIzFiMzQ2YTtcbn1cblxuLmNoYXJ0Qm94IHtcbiAgcGFkZGluZzogMjBweCAxMHB4O1xufVxuXG4uZm9ybS1ncm91cC5oaWRkZW4ge1xuICB3aWR0aDogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5jdXN0b20tZGF5IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAwLjE4NXJlbSAwLjI1cmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMnJlbTtcbiAgd2lkdGg6IDJyZW07XG59XG5cbi5jdXN0b20tZGF5LmZvY3VzZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2O1xufVxuXG4uY3VzdG9tLWRheS5yYW5nZSxcbi5jdXN0b20tZGF5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIsIDExNywgMjE2KTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY3VzdG9tLWRheS5mYWRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMiwgMTE3LCAyMTYsIDAuNSk7XG59XG5cbi5ub0RhdGEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTAlO1xufVxuXG4ucmlnaHQtY29udGVudC1XcmFwIHtcbiAgcGFkZGluZzogMzBweCAzMHB4O1xufVxuXG4ubm90ZSB7XG4gIHBhZGRpbmc6IDIwcHggMjBweDtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDAuODVyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-high-ed-users\",\n  templateUrl: \"./high-ed-users.component.html\",\n  styleUrls: [\"./high-ed-users.component.css\"],\n})\nexport class HighEdUsersComponent implements OnInit {\n  currentPage = 1;\n  active = 1;\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  allRequests = [];\n  totalRecords = 0;\n\n  constructor(\n    private reportService: ReportService,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private router: Router\n  ) {\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.getHighUserOfED();\n  }\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getHighUserOfED();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  getHighUserOfED(pageNo?) {\n    this.currentPage = pageNo ? pageNo : this.currentPage;\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getHighEDUsers(params).subscribe((data) => {\n      this.allRequests = data.data ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n\n  activeIdChange(activeId) {\n    // this.source = Object.keys(this.metaData.sources)[activeId - 1];\n    this.currentPage = 1;\n    this.getHighUserOfED();\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px;\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%;\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n.ngbToggleDropdown {\\n  max-height: 240px;\\n  overflow-y: scroll;\\n  transform: translateY(10px) !important;\\n}\\n\\n.dropdownItem {\\n  padding: 10px;\\n  cursor: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL2lucXVpcnktcmVwb3J0cy9pbnF1aXJ5LXJlcG9ydHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFFBQVE7RUFDUixTQUFTO0VBQ1QsWUFBWTtFQUNaLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7O0VBRUUsa0NBQWtDO0VBQ2xDLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsc0NBQXNDO0FBQ3hDOztBQUNBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy9pbnF1aXJ5LXJlcG9ydHMvaW5xdWlyeS1yZXBvcnRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0QVR5cGUgLmRldGFpbFdyYXBDb21tb24ge1xuICBoZWlnaHQ6IDIwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uc2VsZWN0QVR5cGUgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmRldGFpbFdyYXBDb21tb24ge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHBhZGRpbmc6IDI1cHg7XG4gIG1hcmdpbjogMjVweDtcbiAgYmFja2dyb3VuZDogI2ZkZmRmZDtcbiAgYm9yZGVyOiAycHggc29saWQgI2U4ZThlODtcbn1cblxuLmRldGFpbFdyYXBDb21tb24gLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbn1cblxuLmRldGFpbFdyYXBDb21tb24uYm9yZGVyLUNBQ0NDRiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNjYWNjY2Y7XG59XG5cbi5IMzAwIHtcbiAgZm9udC1zaXplOiAxLjNyZW07XG4gIGNvbG9yOiAjMWIzNDZhO1xufVxuXG4uY2hhcnRCb3gge1xuICBwYWRkaW5nOiAyMHB4IDEwcHg7XG59XG5cbi5mb3JtLWdyb3VwLmhpZGRlbiB7XG4gIHdpZHRoOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmN1c3RvbS1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAycmVtO1xuICB3aWR0aDogMnJlbTtcbn1cblxuLmN1c3RvbS1kYXkuZm9jdXNlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG59XG5cbi5jdXN0b20tZGF5LnJhbmdlLFxuLmN1c3RvbS1kYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMiwgMTE3LCAyMTYpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jdXN0b20tZGF5LmZhZGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAxMTcsIDIxNiwgMC41KTtcbn1cblxuLm5vRGF0YSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAxMCU7XG59XG5cbi5ub3RlIHtcbiAgcGFkZGluZzogMjBweCAyMHB4O1xuICBjb2xvcjogcmVkO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC44NXJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5uZ2JUb2dnbGVEcm9wZG93biB7XG4gIG1heC1oZWlnaHQ6IDI0MHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMHB4KSAhaW1wb3J0YW50O1xufVxuLmRyb3Bkb3duSXRlbSB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGN1cnNvcjogYXV0bztcbn1cbiJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n  NgbDateStruct,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from \"sweetalert2\";\nimport { ChartType, ChartOptions, ChartDataSets } from \"chart.js\";\nimport {\n  SingleDataSet,\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n} from \"ng2-charts\";\nimport { AlertService } from \"src/app/core/_alert\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-inquiry-reports\",\n  templateUrl: \"./inquiry-reports.component.html\",\n  styleUrls: [\"./inquiry-reports.component.css\"],\n})\nexport class InquiryReportsComponent implements OnInit {\n  active = 1;\n  public reports;\n  public chartOptions: ChartOptions = {\n    responsive: true,\n  };\n  colours = [\"#4661EE\", \"#EC5657\", \"#1BCDD1\", \"#8FAABB\"];\n  public chartLegend = true;\n  public charPlugin = [];\n\n  public _pBarChartLabels: Label[] = [];\n  public _pBarChartType: ChartType = \"bar\";\n  public _pBarChartData: ChartDataSets[] = [];\n\n  public _allPieChartLable: Label[] = [\n    [\"Active\"],\n    [\"Pending\"],\n    [\"Cancelled\"],\n    [\"Rejected\"],\n  ];\n  public _allPieChartData: SingleDataSet = [];\n  public _allPieChartType: ChartType = \"pie\";\n\n  doctors = [];\n  currentPage = 1;\n  totalRecords = 0;\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  status = \"active\";\n\n  public statuses = {\n    1: \"active\",\n    2: \"pending\",\n    3: \"cancelled\",\n    4: \"rejected\",\n  };\n\n  allRequests = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private reportService: ReportService,\n    private alert: AlertService\n  ) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((data) => {\n      this.reports = data.reports.data;\n    });\n    this.setPieChart2();\n    this.setBarChart1();\n    this.getAllInquiries();\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  getAllInquiries() {\n    const params = {\n      status: this.status,\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getAllRequetDetails(params).subscribe((data) => {\n      this.allRequests = data.data.rows ? data.data.rows : [];\n      this.allRequests.forEach((req) => {\n        if (req.patientDetails.dob) {\n          req.patientDetails.dob = req.patientDetails.dob.split(\"T\")[0];\n        }\n      });\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getAllInquiries();\n  }\n\n  setPieChart2() {\n    this.reports.allRequestsByStatus.map((item) => {\n      if (item.status == \"active\") {\n        this._allPieChartData[0] = item.count;\n      }\n      if (item.status == \"pending\") {\n        this._allPieChartData[1] = item.count;\n      }\n      if (item.status == \"cancelled\") {\n        this._allPieChartData[2] = item.count;\n      }\n      if (item.status == \"rejected\") {\n        this._allPieChartData[3] = item.count;\n      }\n    });\n  }\n\n  setBarChart1() {\n    this._pBarChartLabels = [];\n    this._pBarChartData = [];\n    this._pBarChartLabels = this.reports.allCases.months;\n    this._pBarChartData.push({\n      data: new Array(this._pBarChartLabels.length).fill(0),\n      label: \"Active\",\n      backgroundColor: \"#8FD8D4\",\n      hoverBackgroundColor: \"#20B2AA\",\n    });\n\n    this._pBarChartData.push({\n      data: new Array(this._pBarChartLabels.length).fill(0),\n      label: \"Pending\",\n      backgroundColor: \"#ffcccb\",\n      hoverBackgroundColor: \"#ff726f\",\n    });\n\n    this._pBarChartData.push({\n      data: new Array(this._pBarChartLabels.length).fill(0),\n      label: \"Cancelled\",\n      backgroundColor: \"#CCCC00\",\n      hoverBackgroundColor: \"#666600\",\n    });\n\n    this._pBarChartData.push({\n      data: new Array(this._pBarChartLabels.length).fill(0),\n      label: \"Rejected\",\n      backgroundColor: \"#ff4c4c\",\n      hoverBackgroundColor: \"darkred\",\n    });\n\n    this.reports.allCases.active.map((item) => {\n      this._pBarChartData.find((item) => item.label == \"Active\").data[\n        this._pBarChartLabels.indexOf(item.month)\n      ] = item.count;\n    });\n\n    this.reports.allCases.pending.map((item) => {\n      this._pBarChartData.find((item) => item.label == \"Pending\").data[\n        this._pBarChartLabels.indexOf(item.month)\n      ] = item.count;\n    });\n\n    this.reports.allCases.cancelled.map((item) => {\n      this._pBarChartData.find((item) => item.label == \"Cancelled\").data[\n        this._pBarChartLabels.indexOf(item.month)\n      ] = item.count;\n    });\n\n    this.reports.allCases.rejected.map((item) => {\n      this._pBarChartData.find((item) => item.label == \"Rejected\").data[\n        this._pBarChartLabels.indexOf(item.month)\n      ] = item.count;\n    });\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  activeIdChange(activeId) {\n    this.status = this.statuses[activeId];\n    this.currentPage = 1;\n    this.getAllInquiries();\n  }\n\n  refreshData() {\n    this.getAllInquiries();\n    this.refreshReport();\n  }\n\n  refreshReport() {\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n    };\n    this.reportService.getReports(params).subscribe((data) => {\n      this.reports = data.data;\n      this.setPieChart2();\n      this.setBarChart1();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy9uZXctcmVxdWVzdHMvbmV3LXJlcXVlc3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { AlertService } from \"src/app/core/_alert\";\nimport { ReportService } from \"../../services/reports.services\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"src/environments/environment\";\nimport { saveAs } from \"file-saver\";\n\n@Component({\n  selector: \"app-new-requests\",\n  templateUrl: \"./new-requests.component.html\",\n  styleUrls: [\"./new-requests.component.css\"],\n})\nexport class NewRequestsComponent implements OnInit {\n  allRequests: any;\n  currentPage = 1;\n  totalRecords = 0;\n  bucketUrl = environment.awsBucketUrl;\n  constructor(private report: ReportService, private alert: AlertService) {}\n\n  ngOnInit() {\n    this.fetchEnquiryRequests();\n  }\n\n  fetchEnquiryRequests() {\n    this.report\n      .fetchEnquiryRequests({ status: \"PENDING\", pageNumber: this.currentPage })\n      .subscribe((data) => {\n        this.allRequests = data.data.rows;\n        this.totalRecords = data.data.count;\n      });\n  }\n\n  changeStatus(id, status) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      // text: \"You will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Confirm\",\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.report\n          .changeEnquiryStatus({ enquiryId: id, status: status })\n          .subscribe((data) => {\n            this.alert.success(\"Status successully changed.\");\n            this.fetchEnquiryRequests();\n          });\n      }\n    });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.fetchEnquiryRequests();\n  }\n\n  download() {\n    this.report.downloadFile().subscribe((blob) => {\n      saveAs(blob, \"dump.gz\");\n    });\n  }\n}\n","export default \".noData {\\n  text-align: center;\\n  margin: 10%\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n.right-content-Wrap\\n{\\n    padding: 30px 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3Byb3ZpZGVycy1saXN0aW5nL3Byb3ZpZGVyLWRldGFpbC9wcm92aWRlci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQjtBQUNGOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQiwwQkFBMEI7QUFDNUI7O0FBQ0E7O0lBRUksa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3Byb3ZpZGVycy1saXN0aW5nL3Byb3ZpZGVyLWRldGFpbC9wcm92aWRlci1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ub0RhdGEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTAlXG59XG5cbi5ub3RlIHtcbiAgcGFkZGluZzogMjBweCAyMHB4O1xuICBjb2xvcjogcmVkO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC44NXJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4ucmlnaHQtY29udGVudC1XcmFwXG57XG4gICAgcGFkZGluZzogMzBweCAzMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ChartOptions, ChartType } from \"chart.js\";\nimport {\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n  SingleDataSet,\n} from \"ng2-charts\";\nimport { ReportService } from \"../../../services/reports.services\";\n\n@Component({\n  selector: \"app-provider-detail\",\n  templateUrl: \"./provider-detail.component.html\",\n  styleUrls: [\"./provider-detail.component.css\"],\n})\nexport class ProviderDetailComponent implements OnInit {\n  public doctor: any;\n  public title: any;\n  public doctorId: any;\n  active = 1;\n  currentPage = 1;\n  totalRecords = 0;\n  status = \"active\";\n  public statistics: any;\n  statusCount: any;\n  public statuses = {\n    1: \"active\",\n    2: \"all\",\n    3: \"cancelled\",\n    4: \"rejected\",\n  };\n  allRequests = [];\n  public chartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public chartLegend = true;\n  public charPlugin = [];\n  public _chartLabels: Label[] = [];\n  public _chartData: SingleDataSet = [];\n  public _charType: ChartType = \"pie\";\n\n  constructor(\n    private router: ActivatedRoute,\n    private reportService: ReportService\n  ) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n  }\n\n  ngOnInit() {\n    this.doctorId = this.router.snapshot.queryParamMap.get(\"id\");\n    this.title = this.router.snapshot.queryParamMap.get(\"title\");\n    if (this.doctorId) {\n      this.getProviderReport();\n    }\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getProviderReport();\n  }\n\n  getProviderReport() {\n    const params = {\n      status: this.status,\n      id: this.doctorId,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getProviderDetails(params).subscribe((data) => {\n      this.doctor = data.data.cases ? data.data.cases.rows : [];\n      this.statistics = data.data.statistics;\n      this.statusCount = data.data.statusCount;\n      this.totalRecords = data.data.cases.count\n        ? data.data.cases.count\n        : this.doctor.length;\n      this.setPieChart3();\n    });\n  }\n\n  activeIdChange(activeId) {\n    this.status = this.statuses[activeId];\n    this.currentPage = 1;\n    this.getProviderReport();\n  }\n\n  setPieChart3() {\n    this._chartData = [];\n    this._chartLabels = [];\n\n    this._chartLabels.push(\"Downloads\");\n    this._chartData.push(this.statistics.downloads);\n    this._chartLabels.push(\"Cancelled\");\n    this._chartData.push(this.statusCount.cancelled);\n    this._chartLabels.push(\"Rejected\");\n    this._chartData.push(this.statusCount.rejected);\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%\\n}\\n\\n.right-content-Wrap {\\n  padding: 30px 30px;\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3Byb3ZpZGVycy1saXN0aW5nL3Byb3ZpZGVycy1saXN0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsYUFBYTtBQUNmOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRTtBQUNGOztBQUVBO0VBQ0UsUUFBUTtFQUNSLFNBQVM7RUFDVCxZQUFZO0VBQ1osVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTs7RUFFRSxrQ0FBa0M7RUFDbEMsWUFBWTtBQUNkOztBQUVBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLDBCQUEwQjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy9wcm92aWRlcnMtbGlzdGluZy9wcm92aWRlcnMtbGlzdGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdEFUeXBlIC5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnNlbGVjdEFUeXBlIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAyNXB4O1xuICBtYXJnaW46IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZGZkZmQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlOGU4ZTg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIC5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uLmJvcmRlci1DQUNDQ0Yge1xuICBib3JkZXI6IDJweCBzb2xpZCAjY2FjY2NmO1xufVxuXG4uSDMwMCB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBjb2xvcjogIzFiMzQ2YTtcbn1cblxuLmNoYXJ0Qm94IHtcbiAgcGFkZGluZzogMjBweCAxMHB4XG59XG5cbi5mb3JtLWdyb3VwLmhpZGRlbiB7XG4gIHdpZHRoOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmN1c3RvbS1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAycmVtO1xuICB3aWR0aDogMnJlbTtcbn1cblxuLmN1c3RvbS1kYXkuZm9jdXNlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG59XG5cbi5jdXN0b20tZGF5LnJhbmdlLFxuLmN1c3RvbS1kYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMiwgMTE3LCAyMTYpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jdXN0b20tZGF5LmZhZGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAxMTcsIDIxNiwgMC41KTtcbn1cblxuLm5vRGF0YSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAxMCVcbn1cblxuLnJpZ2h0LWNvbnRlbnQtV3JhcCB7XG4gIHBhZGRpbmc6IDMwcHggMzBweDtcbn1cblxuLm5vdGUge1xuICBwYWRkaW5nOiAyMHB4IDIwcHg7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAwLjg1cmVtO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-providers-listing\",\n  templateUrl: \"./providers-listing.component.html\",\n  styleUrls: [\"./providers-listing.component.css\"],\n})\nexport class ProvidersListingComponent implements OnInit {\n  currentPage = 1;\n  active = 1;\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  allRequests = [];\n  totalRecords = 0;\n\n  constructor(\n    private reportService: ReportService,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private router: Router\n  ) {\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.getProvidersList();\n  }\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getProvidersList();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  getProvidersList(pageNo?) {\n    this.currentPage = pageNo ? pageNo : this.currentPage;\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getProviders(params).subscribe((data) => {\n      this.allRequests = data.data ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n\n  activeIdChange(activeId) {\n    // this.source = Object.keys(this.metaData.sources)[activeId - 1];\n    this.currentPage = 1;\n    this.getProvidersList();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy9yZWplY3RlZC1yZXF1ZXN0cy9yZWplY3RlZC1yZXF1ZXN0cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { AlertService } from \"src/app/core/_alert\";\nimport { ReportService } from \"../../services/reports.services\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-rejected-requests\",\n  templateUrl: \"./rejected-requests.component.html\",\n  styleUrls: [\"./rejected-requests.component.css\"],\n})\nexport class RejectedRequestsComponent implements OnInit {\n  allRequests;\n  currentPage = 1;\n  totalRecords = 0;\n  constructor(private report: ReportService, private alert: AlertService) {}\n\n  ngOnInit() {\n    this.fetchEnquiryRequests();\n  }\n\n  fetchEnquiryRequests() {\n    this.report\n      .fetchEnquiryRequests({\n        status: \"REJECTED\",\n        pageNumber: this.currentPage,\n      })\n      .subscribe((data) => {\n        this.allRequests = data.data.rows;\n        this.totalRecords = data.data.count;\n      });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.fetchEnquiryRequests();\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3NvdXJjZXMvc291cmNlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQjtBQUNGOztBQUVBO0VBQ0UsUUFBUTtFQUNSLFNBQVM7RUFDVCxZQUFZO0VBQ1osVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTs7RUFFRSxrQ0FBa0M7RUFDbEMsWUFBWTtBQUNkOztBQUVBO0VBQ0Usd0NBQXdDO0FBQzFDIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3NvdXJjZXMvc291cmNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdEFUeXBlIC5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnNlbGVjdEFUeXBlIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAyNXB4O1xuICBtYXJnaW46IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZGZkZmQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlOGU4ZTg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIC5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uLmJvcmRlci1DQUNDQ0Yge1xuICBib3JkZXI6IDJweCBzb2xpZCAjY2FjY2NmO1xufVxuXG4uSDMwMCB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBjb2xvcjogIzFiMzQ2YTtcbn1cblxuLmNoYXJ0Qm94IHtcbiAgcGFkZGluZzogMjBweCAxMHB4XG59XG5cbi5ub0RhdGEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTAlXG59XG5cbi5mb3JtLWdyb3VwLmhpZGRlbiB7XG4gIHdpZHRoOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmN1c3RvbS1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAycmVtO1xuICB3aWR0aDogMnJlbTtcbn1cblxuLmN1c3RvbS1kYXkuZm9jdXNlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG59XG5cbi5jdXN0b20tZGF5LnJhbmdlLFxuLmN1c3RvbS1kYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMiwgMTE3LCAyMTYpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jdXN0b20tZGF5LmZhZGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAxMTcsIDIxNiwgMC41KTtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ChartOptions, ChartType } from \"chart.js\";\nimport {\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n  SingleDataSet,\n} from \"ng2-charts\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-sources\",\n  templateUrl: \"./sources.component.html\",\n  styleUrls: [\"./sources.component.css\"],\n})\nexport class SourcesComponent implements OnInit {\n  active = 1;\n  currentPage = 1;\n  totalRecords = 0;\n  public reports;\n  public metaData;\n  public chartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public chartLegend = true;\n  public charPlugin = [];\n  public _sPieChartLable: Label[] = [];\n  public _sPieChartData: SingleDataSet = [];\n  public _sPieChartType: ChartType = \"pie\";\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  sources = [];\n  source = \"sm\";\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private reportService: ReportService\n  ) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((data) => {\n      this.metaData = data.metaData;\n      this.reports = data.reports.data;\n    });\n    this.setPieChart1();\n    this.getAllSources();\n  }\n\n  setPieChart1() {\n    this._sPieChartLable = [];\n    this._sPieChartData = [];\n    this.reports.sources.map((item) => {\n      this._sPieChartLable.push(\n        this.capitalizeFirstLetter(this.metaData.sources[item.source])\n      );\n      this._sPieChartData.push(item.count);\n    });\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  getAllSources() {\n    const params = {\n      source: this.source,\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getSourceDetails(params).subscribe((data) => {\n      this.sources = data.data.rows ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.sources.length;\n    });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getAllSources();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  activeIdChange(activeId) {\n    this.source = Object.keys(this.metaData.sources)[activeId - 1];\n    this.currentPage = 1;\n    this.getAllSources();\n  }\n\n  refreshData() {\n    this.getAllSources();\n    this.refreshReport();\n  }\n\n  refreshReport() {\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n    };\n    this.reportService.getReports(params).subscribe((data) => {\n      this.reports = data.data;\n      this.setPieChart1();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy90d28tZGF5cy1yZXBvcnQvdHdvLWRheXMtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ChartOptions, ChartType } from \"chart.js\";\nimport {\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n  SingleDataSet,\n  Color,\n} from \"ng2-charts\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-two-days-report\",\n  templateUrl: \"./two-days-report.component.html\",\n  styleUrls: [\"./two-days-report.component.css\"],\n})\nexport class TwoDaysReportComponent implements OnInit {\n  active = 1;\n  currentPage = 1;\n  totalRecords = 0;\n  status = \"active\";\n  public statuses = {\n    1: \"active\",\n    2: \"pending\",\n    3: \"cancelled\",\n    4: \"rejected\",\n  };\n  chartColors: Color[] = [\n    {\n      backgroundColor: [\"#8FD8D4\", \"#ffcccb\", \"#CCCC00\", \"#ff4c4c\"],\n      hoverBackgroundColor: [\"#20B2AA\", \"#ff726f\", \"#666600\", \"darkred\"],\n    },\n  ];\n  allRequests = [];\n  public reports;\n  public metaData;\n  public chartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public chartLegend = true;\n  public charPlugin = [];\n  public _last2daysPieChartLable: Label[] = [\n    [\"Active\"],\n    [\"Pending\"],\n    [\"Cancelled\"],\n    [\"Rejected\"],\n  ];\n  public _last2daysPieChartData: SingleDataSet = new Array(4).fill(0);\n  public _last2daysPieChartType: ChartType = \"pie\";\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private reportService: ReportService\n  ) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((data) => {\n      this.metaData = data.metaData;\n      this.reports = data.reports.data;\n    });\n    this.setPieChart3();\n    this.getAllInquiries();\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getAllInquiries();\n  }\n\n  setPieChart3() {\n    this.reports.last2DaysRequests.map((item) => {\n      if (item.status == \"active\") {\n        this._last2daysPieChartData[0] = item.count;\n      }\n      if (item.status == \"pending\") {\n        this._last2daysPieChartData[1] = item.count;\n      }\n      if (item.status == \"cancelled\") {\n        this._last2daysPieChartData[2] = item.count;\n      }\n      if (item.status == \"rejected\") {\n        this._last2daysPieChartData[3] = item.count;\n      }\n    });\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  getAllInquiries() {\n    const params = {\n      status: this.status,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.last2DaysReport(params).subscribe((data) => {\n      this.allRequests = data.data.rows ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n\n  activeIdChange(activeId) {\n    this.status = this.statuses[activeId];\n    this.currentPage = 1;\n    this.getAllInquiries();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CancelledReportComponent } from \"./components/cancelled-report/cancelled-report.component\";\nimport { InquiryReportsComponent } from \"./components/inquiry-reports/inquiry-reports.component\";\nimport { ProviderDetailComponent } from \"./components/providers-listing/provider-detail/provider-detail.component\";\nimport { ProvidersListingComponent } from \"./components/providers-listing/providers-listing.component\";\nimport { SourcesComponent } from \"./components/sources/sources.component\";\nimport { TwoDaysReportComponent } from \"./components/two-days-report/two-days-report.component\";\nimport { HighEdUsersComponent } from \"./components/high-ed-users/high-ed-users.component\";\nimport { NewRequestsComponent } from \"./components/new-requests/new-requests.component\";\nimport { RejectedRequestsComponent } from \"./components/rejected-requests/rejected-requests.component\";\n\nconst routes: Routes = [\n  { path: \"rejected-requests\", component: RejectedRequestsComponent },\n  { path: \"new-requests\", component: NewRequestsComponent },\n  {\n    path: \"inquiries\",\n    component: InquiryReportsComponent,\n  },\n  {\n    path: \"two-days-report\",\n    component: TwoDaysReportComponent,\n  },\n  {\n    path: \"sources\",\n    component: SourcesComponent,\n  },\n  {\n    path: \"cancelled-report\",\n    component: CancelledReportComponent,\n  },\n  {\n    path: \"providers\",\n    component: ProvidersListingComponent,\n  },\n  {\n    path: \"provider-detail\",\n    component: ProviderDetailComponent,\n  },\n  {\n    path: \"edusers\",\n    component: HighEdUsersComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\nimport { InquiryReportsComponent } from \"./components/inquiry-reports/inquiry-reports.component\";\nimport { ChartsModule } from \"ng2-charts\";\nimport { TwoDaysReportComponent } from \"./components/two-days-report/two-days-report.component\";\nimport { SourcesComponent } from \"./components/sources/sources.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CancelledReportComponent } from \"./components/cancelled-report/cancelled-report.component\";\nimport { ProvidersListingComponent } from \"./components/providers-listing/providers-listing.component\";\nimport { ProviderDetailComponent } from \"./components/providers-listing/provider-detail/provider-detail.component\";\nimport { HighEdUsersComponent } from \"./components/high-ed-users/high-ed-users.component\";\nimport { NewRequestsComponent } from './components/new-requests/new-requests.component';\nimport { RejectedRequestsComponent } from './components/rejected-requests/rejected-requests.component';\n\n@NgModule({\n  declarations: [\n    InquiryReportsComponent,\n    TwoDaysReportComponent,\n    SourcesComponent,\n    CancelledReportComponent,\n    ProvidersListingComponent,\n    ProviderDetailComponent,\n    HighEdUsersComponent,\n    NewRequestsComponent,\n    RejectedRequestsComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReportsRoutingModule,\n    ChartsModule,\n    SharedModule,\n    NgbModule,\n    FormsModule,\n  ],\n})\nexport class ReportsModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { ApiService } from \"src/app/core/services/api.service\";\nimport { ApiEndPoints } from \"src/app/core/constants/api-endpoints\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ReportService {\n  constructor(private http: HttpClient) {}\n\n  getAllEnquiryDetails(filters: HttpParams): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.allRequestDetails, {\n      params,\n    });\n  }\n\n  getAllRequetDetails(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.allRequestDetails, {\n      params,\n    });\n  }\n\n  getSourceDetails(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.allSourceDetails, {\n      params,\n    });\n  }\n\n  last2DaysReport(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.last2DaysReport, {\n      params,\n    });\n  }\n\n  getReports(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.inquiryReports, {\n      params,\n    });\n  }\n\n  getCancelledReports(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.cancelledReports, {\n      params,\n    });\n  }\n\n  getProviders(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.getProviders, {\n      params,\n    });\n  }\n\n  getHighEDUsers(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.getHighEDUsers, {\n      params,\n    });\n  }\n\n  getProviderDetails(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(`${ApiEndPoints.getProviderDetails}${filters.id}`, {\n      params,\n    });\n  }\n\n  /**\n   * change status of enquiry by admin\n   * @param payload\n   * @returns\n   */\n  changeEnquiryStatus(payload): Observable<any> {\n    return this.http.patch(ApiEndPoints.changeEnquiryStatus, payload);\n  }\n\n  /**\n   * fetch enquiry requests based on params\n   * @param params\n   * @returns\n   */\n  fetchEnquiryRequests(args): Observable<any> {\n    let params: HttpParams = args;\n    return this.http.get(ApiEndPoints.adminEnquiryRequests, { params });\n  }\n\n  downloadFile(): Observable<any> {\n    return this.http.get(ApiEndPoints.downloadFile);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"reports-reports-module-es5.js"}