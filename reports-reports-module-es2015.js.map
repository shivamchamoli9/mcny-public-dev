{"version":3,"sources":["./node_modules/file-saver/dist/FileSaver.min.js","./src/app/admin/reports/components/cancelled-report/cancelled-report.component.html","./src/app/admin/reports/components/high-ed-users/high-ed-users.component.html","./src/app/admin/reports/components/inquiry-reports/inquiry-reports.component.html","./src/app/admin/reports/components/new-requests/new-requests.component.html","./src/app/admin/reports/components/providers-listing/provider-detail/provider-detail.component.html","./src/app/admin/reports/components/providers-listing/providers-listing.component.html","./src/app/admin/reports/components/rejected-requests/rejected-requests.component.html","./src/app/admin/reports/components/sources/sources.component.html","./src/app/admin/reports/components/two-days-report/two-days-report.component.html","./src/app/admin/reports/components/cancelled-report/cancelled-report.component.css","./src/app/admin/reports/components/cancelled-report/cancelled-report.component.ts","./src/app/admin/reports/components/high-ed-users/high-ed-users.component.css","./src/app/admin/reports/components/high-ed-users/high-ed-users.component.ts","./src/app/admin/reports/components/inquiry-reports/inquiry-reports.component.css","./src/app/admin/reports/components/inquiry-reports/inquiry-reports.component.ts","./src/app/admin/reports/components/new-requests/new-requests.component.css","./src/app/admin/reports/components/new-requests/new-requests.component.ts","./src/app/admin/reports/components/providers-listing/provider-detail/provider-detail.component.css","./src/app/admin/reports/components/providers-listing/provider-detail/provider-detail.component.ts","./src/app/admin/reports/components/providers-listing/providers-listing.component.css","./src/app/admin/reports/components/providers-listing/providers-listing.component.ts","./src/app/admin/reports/components/rejected-requests/rejected-requests.component.css","./src/app/admin/reports/components/rejected-requests/rejected-requests.component.ts","./src/app/admin/reports/components/sources/sources.component.css","./src/app/admin/reports/components/sources/sources.component.ts","./src/app/admin/reports/components/two-days-report/two-days-report.component.css","./src/app/admin/reports/components/two-days-report/two-days-report.component.ts","./src/app/admin/reports/reports-routing.module.ts","./src/app/admin/reports/reports.module.ts","./src/app/admin/reports/services/reports.services.ts"],"names":[],"mappings":"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","file":"reports-reports-module-es2015.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Cancelled Requests\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"getCancelledReports(1)\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div\\n          class=\\\"table-responsive entity-table\\\"\\n          *ngIf=\\\"allRequests.length; else nodata\\\"\\n        >\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"\\\">#</th>\\n                <th class=\\\"\\\">Client Name</th>\\n                <th class=\\\"\\\">Email</th>\\n                <th class=\\\"\\\">Contact</th>\\n                <th>Cancelled At</th>\\n                <th>Cancelled By</th>\\n                <th>Currently Assigned</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                <td>{{ request.patientDetails.clientName | titlecase }}</td>\\n                <td>{{ request.patientDetails.email }}</td>\\n                <td>\\n                  {{ request.patientDetails.countryCode }}\\n                  {{ request.patientDetails.phoneNumber }}\\n                </td>\\n                <td>{{ request.cancelTime | date: \\\"medium\\\" }}</td>\\n                <td>{{ request.assignedDoctor.name | titlecase }}</td>\\n                <td>\\n                  {{\\n                    request.assignedNow?.name\\n                      ? request.assignedNow?.name\\n                      : (\\\"Not Assigned\\\" | titlecase)\\n                  }}\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <app-pagination\\n            [totalRecords]=\\\"totalRecords\\\"\\n            [data]=\\\"allRequests\\\"\\n            [currentPage]=\\\"currentPage\\\"\\n            (clickedPage)=\\\"clickPage($event)\\\"\\n          >\\n          </app-pagination>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\\n<!-- <div class=\\\"col-md-4 col-lg-4 chartBox\\\">\\n      <div class=\\\"text-center\\\">\\n        <h3 class=\\\"H300 semibold\\\">Sources</h3>\\n        <div style=\\\"display: block;\\\">\\n          <canvas baseChart [data]=\\\"_sPieChartData\\\" [labels]=\\\"_sPieChartLable\\\" [chartType]=\\\"_sPieChartType\\\"\\n            [options]=\\\"chartOptions\\\" [plugins]=\\\"charPlugin\\\" [legend]=\\\"chartLegend\\\">\\n          </canvas>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-4 col-lg-4 chartBox\\\">\\n      <div class=\\\"text-center\\\">\\n        <h3 class=\\\"H300 semibold\\\">All Requests</h3>\\n        <div style=\\\"display: block;\\\">\\n          <canvas baseChart [data]=\\\"_allPieChartData\\\" [labels]=\\\"_allPieChartLable\\\" [chartType]=\\\"_allPieChartType\\\"\\n            [options]=\\\"chartOptions\\\" [plugins]=\\\"charPlugin\\\" [legend]=\\\"chartLegend\\\">\\n          </canvas>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-4 col-lg-4 chartBox\\\">\\n      <div class=\\\"text-center\\\">\\n        <h3 class=\\\"H300 semibold\\\">Last 2 Days</h3>\\n        <div style=\\\"display: block;\\\">\\n          <canvas baseChart [data]=\\\"_last2daysPieChartData\\\" [labels]=\\\"_last2daysPieChartLable\\\"\\n            [chartType]=\\\"_last2daysPieChartType\\\" [options]=\\\"chartOptions\\\" [plugins]=\\\"charPlugin\\\" [legend]=\\\"chartLegend\\\">\\n          </canvas>\\n        </div>\\n      </div>\\n    </div> -->\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        POP High Utilizer\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"getHighUserOfED(1)\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"table-responsive entity-table\\\">\\n          <div\\n            class=\\\"table-responsive entity-table\\\"\\n            *ngIf=\\\"allRequests?.length; else nodata\\\"\\n          >\\n            <table class=\\\"table table-striped\\\">\\n              <thead>\\n                <tr>\\n                  <th class=\\\"\\\">#</th>\\n                  <th class=\\\"\\\">Name</th>\\n                  <th class=\\\"\\\">Email</th>\\n                  <th class=\\\"\\\">Contact</th>\\n                  <th>Reqeust Date</th>\\n                  <th>Accepted By</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                  <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                  <td>{{ request.clientName | titlecase }}</td>\\n                  <td>{{ request.email }}</td>\\n                  <td>\\n                    {{ request.countryCode }}\\n                    {{ request.phoneNumber }}\\n                  </td>\\n                  <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                  <td>\\n                    {{\\n                      request?.enquiryRequests[0]?.assignedDoctor?.name || \\\"N/A\\\"\\n                    }}\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <app-pagination\\n              [totalRecords]=\\\"totalRecords\\\"\\n              [data]=\\\"allRequests\\\"\\n              [currentPage]=\\\"currentPage\\\"\\n              (clickedPage)=\\\"clickPage($event)\\\"\\n            >\\n            </app-pagination>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap bg-grey\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        All Requests\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"refreshData()\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"selectAType pt-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-1 col-lg-1 chartBox\\\"></div>\\n            <div class=\\\"col-md-10 col-lg-10 chartBox\\\">\\n              <div class=\\\"text-center\\\">\\n                <h3 class=\\\"H300 semibold\\\">Inquiries</h3>\\n                <div style=\\\"display: block\\\">\\n                  <canvas\\n                    baseChart\\n                    [datasets]=\\\"_pBarChartData\\\"\\n                    [labels]=\\\"_pBarChartLabels\\\"\\n                    [chartType]=\\\"_pBarChartType\\\"\\n                    [options]=\\\"chartOptions\\\"\\n                    [plugins]=\\\"charPlugin\\\"\\n                    [legend]=\\\"chartLegend\\\"\\n                  >\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1 col-lg-1 chartBox\\\"></div>\\n            <div class=\\\"col-md-12 col-lg-12 note\\\">\\n              Note: Listing can have multiple values, as Single Inquiry was sent\\n              to multiple Clinicains. Showing details with individual provider.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Active</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Assigned Provider</th>\\n                      <th>DOB</th>\\n                      <th>Insurance Provider</th>\\n                      <th>Insurance Number</th>\\n                      <th>City</th>\\n                      <th>Date</th>\\n                      <th>Download</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails.countryCode }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n\\n                      <td>{{ request.assignedDoctor.name | titlecase }}</td>\\n                      <td>\\n                        {{ request.patientDetails.dob }}\\n                      </td>\\n                      <td>\\n                        {{\\n                          request.patientDetails?.insuranceProvider?.insurance\\n                        }}\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.insuranceNumber }}\\n                      </td>\\n                      <td>{{ request.patientDetails.city | titlecase }}</td>\\n                      <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Pending</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Pending Since</th>\\n                      <th>Assigned Provider</th>\\n                      <th>DOB</th>\\n                      <th>Insurance Provider</th>\\n                      <th>Insurance Number</th>\\n                      <th>City</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails.countryCode }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n\\n                      <td>\\n                        {{\\n                          request.patientDetails.enquiryRequests[0]\\n                            ?.assignedDoctor.name\\n                        }}\\n                        <div\\n                          ngbDropdown\\n                          class=\\\"d-inline-block\\\"\\n                          style=\\\"cursor: pointer\\\"\\n                          *ngIf=\\\"\\n                            request.patientDetails.enquiryRequests.length > 1\\n                          \\\"\\n                        >\\n                          <span\\n                            style=\\\"cursor: pointer\\\"\\n                            id=\\\"dropdownBasic1\\\"\\n                            ngbDropdownToggle\\n                          >\\n                            ...\\n                          </span>\\n                          <div\\n                            class=\\\"ngbToggleDropdown\\\"\\n                            ngbDropdownMenu\\n                            aria-labelledby=\\\"dropdownBasic1\\\"\\n                          >\\n                            <div\\n                              class=\\\"dropdownItem\\\"\\n                              *ngFor=\\\"\\n                                let doc of request.patientDetails\\n                                  ?.enquiryRequests;\\n                                let i = index\\n                              \\\"\\n                            >\\n                              {{ doc.assignedDoctor?.name }}\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.dob }}\\n                      </td>\\n                      <td>\\n                        {{\\n                          request.patientDetails?.insuranceProvider?.insurance\\n                        }}\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.insuranceNumber }}\\n                      </td>\\n                      <td>{{ request.patientDetails.city | titlecase }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"3\\\">\\n            <a ngbNavLink>Cancelled</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Cancelled At</th>\\n                      <th>Cancelled By</th>\\n                      <th>DOB</th>\\n                      <th>Insurance Provider</th>\\n                      <th>Insurance Number</th>\\n                      <th>City</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ request.patientDetails.clientName }}</td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails.countryCode }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.cancelTime | date: \\\"medium\\\" }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.enquiryRequests[0]\\n                            ?.assignedDoctor.name\\n                        }}\\n                        <div\\n                          ngbDropdown\\n                          class=\\\"d-inline-block\\\"\\n                          style=\\\"cursor: pointer\\\"\\n                          *ngIf=\\\"\\n                            request.patientDetails.enquiryRequests.length > 1\\n                          \\\"\\n                        >\\n                          <span\\n                            style=\\\"cursor: pointer\\\"\\n                            id=\\\"dropdownBasic1\\\"\\n                            ngbDropdownToggle\\n                          >\\n                            ...\\n                          </span>\\n                          <div\\n                            class=\\\"ngbToggleDropdown\\\"\\n                            ngbDropdownMenu\\n                            aria-labelledby=\\\"dropdownBasic1\\\"\\n                          >\\n                            <div\\n                              class=\\\"dropdownItem\\\"\\n                              *ngFor=\\\"\\n                                let doc of request.patientDetails\\n                                  ?.enquiryRequests;\\n                                let i = index\\n                              \\\"\\n                            >\\n                              {{ doc.assignedDoctor?.name }}\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.dob }}\\n                      </td>\\n                      <td>\\n                        {{\\n                          request.patientDetails?.insuranceProvider?.insurance\\n                        }}\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.insuranceNumber }}\\n                      </td>\\n                      <td>{{ request.patientDetails.city | titlecase }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"4\\\">\\n            <a ngbNavLink>Rejected</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Rejected At</th>\\n                      <th>Rejected By</th>\\n                      <th>DOB</th>\\n                      <th>Insurance Provider</th>\\n                      <th>Insurance Number</th>\\n                      <th>City</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails.countryCode }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.rejectTime | date: \\\"medium\\\" }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.enquiryRequests[0]\\n                            ?.assignedDoctor.name\\n                        }}\\n                        <div\\n                          ngbDropdown\\n                          class=\\\"d-inline-block\\\"\\n                          style=\\\"cursor: pointer\\\"\\n                          *ngIf=\\\"\\n                            request.patientDetails?.enquiryRequests?.length > 1\\n                          \\\"\\n                        >\\n                          <span\\n                            style=\\\"cursor: pointer\\\"\\n                            id=\\\"dropdownBasic1\\\"\\n                            ngbDropdownToggle\\n                          >\\n                            ...\\n                          </span>\\n                          <div\\n                            class=\\\"ngbToggleDropdown\\\"\\n                            ngbDropdownMenu\\n                            aria-labelledby=\\\"dropdownBasic1\\\"\\n                          >\\n                            <div\\n                              class=\\\"dropdownItem\\\"\\n                              *ngFor=\\\"\\n                                let doc of request.patientDetails\\n                                  ?.enquiryRequests;\\n                                let i = index\\n                              \\\"\\n                            >\\n                              {{ doc.assignedDoctor?.name }}\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.dob }}\\n                      </td>\\n                      <td>\\n                        {{\\n                          request.patientDetails?.insuranceProvider?.insurance\\n                        }}\\n                      </td>\\n                      <td>\\n                        {{ request.patientDetails.insuranceNumber }}\\n                      </td>\\n                      <td>{{ request.patientDetails.city | titlecase }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Data</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        New Requests\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <!-- <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"getCancelledReports(1)\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div> -->\\n            </div>\\n          </div>\\n        </div>\\n        <div\\n          class=\\\"table-responsive entity-table\\\"\\n          *ngIf=\\\"allRequests?.length; else nodata\\\"\\n        >\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"\\\">#</th>\\n                <th class=\\\"\\\">Client Name</th>\\n                <th class=\\\"\\\">Email</th>\\n                <th class=\\\"\\\">Contact</th>\\n                <th>Request Date</th>\\n                <th>DOB</th>\\n                <th>Insurance Provider</th>\\n                <th>Insurance Number</th>\\n                <th>City</th>\\n                <th>File</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                <td>\\n                  {{ request?.clientName | titlecase }}\\n                </td>\\n                <td>{{ request?.email }}</td>\\n                <td>\\n                  {{ request?.countryCode }}\\n                  {{ request?.phoneNumber }}\\n                </td>\\n                <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n\\n                <td>\\n                  {{ request?.dob | date: \\\"yyyy-MM-dd\\\" }}\\n                </td>\\n                <td>\\n                  {{ request?.insuranceProvider?.insurance }}\\n                </td>\\n                <td>\\n                  {{ request?.insuranceNumber }}\\n                </td>\\n                <td>{{ request?.city | titlecase }}</td>\\n                <td>\\n                  <a\\n                    class=\\\"blue-btn col-white\\\"\\n                    href=\\\"{{ bucketUrl }}/{{ request?.insuranceAsset?.path }}{{\\n                      request?.insuranceAsset?.extension\\n                    }}\\\"\\n                  >\\n                    <!-- <a class=\\\"blue-btn col-white\\\" (click)=\\\"download()\\\"> -->\\n                    Download\\n                  </a>\\n                </td>\\n                <td>\\n                  <div\\n                    style=\\\"display: flex\\\"\\n                    *ngIf=\\\"request.status !== 'ACTIVE'; else activeCon\\\"\\n                  >\\n                    <button\\n                      class=\\\"green-btn\\\"\\n                      (click)=\\\"changeStatus(request.id, 'ACTIVE')\\\"\\n                    >\\n                      Approve\\n                    </button>\\n                    <button\\n                      class=\\\"red-btn ml-10\\\"\\n                      (click)=\\\"changeStatus(request.id, 'REJECTED')\\\"\\n                    >\\n                      Reject\\n                    </button>\\n                  </div>\\n                  <ng-template #activeCon\\n                    ><span class=\\\"col-green\\\">Approved</span></ng-template\\n                  >\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <app-pagination\\n            [totalRecords]=\\\"totalRecords\\\"\\n            [data]=\\\"allRequests\\\"\\n            [currentPage]=\\\"currentPage\\\"\\n            (clickedPage)=\\\"clickPage($event)\\\"\\n          >\\n          </app-pagination>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Provider's Report : {{ title }}\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"selectAType pt-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n            <div class=\\\"col-md-8 col-lg-8 chartBox\\\">\\n              <div class=\\\"text-center\\\">\\n                <h3 class=\\\"H300 semibold\\\">Download and Cases</h3>\\n                <div\\n                  style=\\\"display: block\\\"\\n                  *ngIf=\\\"_chartLabels.length && _chartData.length\\\"\\n                >\\n                  <canvas\\n                    baseChart\\n                    [data]=\\\"_chartData\\\"\\n                    [labels]=\\\"_chartLabels\\\"\\n                    [chartType]=\\\"_charType\\\"\\n                    [options]=\\\"chartOptions\\\"\\n                    [plugins]=\\\"charPlugin\\\"\\n                    [legend]=\\\"chartLegend\\\"\\n                  >\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n            <div class=\\\"col-md-12 col-lg-12 note\\\" *ngIf=\\\"active == 2\\\">\\n              Note: Listing can have more values than graph, as single case\\n              could have been recieved mutiple times as in case of Cancellation\\n              from previous provider.\\n            </div>\\n            <div class=\\\"col-md-12 col-lg-12 note\\\" *ngIf=\\\"active == 1\\\">\\n              Note: Values in graph and details in listing can be different, as\\n              provider might have cancelled the case after downloading!.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Downloaded</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"doctor && doctor.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Accepted At</th>\\n                      <th>Appointment Scheduled</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of doctor; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.phoneNumber\\n                            ? request.patientDetails.countryCode\\n                            : \\\"\\\"\\n                        }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>\\n                        {{ request.acceptTime | date: \\\"medium\\\" }}\\n                      </td>\\n                      <td>\\n                        <span\\n                          *ngIf=\\\"request?.appointmentTime; else noAptTime\\\"\\n                          >{{ request?.appointmentTime | date: \\\"medium\\\" }}</span\\n                        >\\n                        <ng-template #noAptTime>Not Scheduled</ng-template>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctor\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Total Cases Received</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"doctor && doctor.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Pending Since</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of doctor; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.phoneNumber\\n                            ? request.patientDetails.countryCode\\n                            : \\\"\\\"\\n                        }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctor\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"3\\\">\\n            <a ngbNavLink>Cancelled</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"doctor && doctor.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Cancelled At</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of doctor; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.phoneNumber\\n                            ? request.patientDetails.countryCode\\n                            : \\\"\\\"\\n                        }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.cancelTime | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctor\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"4\\\">\\n            <a ngbNavLink>Rejected</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"doctor && doctor.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Rejected At</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of doctor; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails.email }}</td>\\n                      <td>\\n                        {{\\n                          request.patientDetails.phoneNumber\\n                            ? request.patientDetails.countryCode\\n                            : \\\"\\\"\\n                        }}\\n                        {{ request.patientDetails.phoneNumber }}\\n                      </td>\\n                      <td>{{ request.rejectTime | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctor\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Data</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Providers Report\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"mm-dd-yyyy\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"getProvidersList(1)\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"table-responsive entity-table\\\">\\n          <!-- <ul\\n            ngbNav\\n            #nav=\\\"ngbNav\\\"\\n            [(activeId)]=\\\"active\\\"\\n            (activeIdChange)=\\\"activeIdChange(active)\\\"\\n            class=\\\"nav-tabs\\\"\\n          >\\n            <li [ngbNavItem]=\\\"1\\\">\\n              <a ngbNavLink>Providers Report</a>\\n              <ng-template ngbNavContent> -->\\n          <div\\n            class=\\\"table-responsive entity-table\\\"\\n            *ngIf=\\\"allRequests?.length; else nodata\\\"\\n          >\\n            <table class=\\\"table table-striped\\\">\\n              <thead>\\n                <tr>\\n                  <th class=\\\"\\\">#</th>\\n                  <th class=\\\"\\\">Name</th>\\n                  <th class=\\\"\\\">Email</th>\\n                  <th class=\\\"\\\">Contact</th>\\n                  <th class=\\\"\\\">Gender</th>\\n                  <th>Joined At</th>\\n                  <th>Availability</th>\\n                  <th>More</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                  <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                  <td>{{ request.name | titlecase }}</td>\\n                  <td>{{ request.email }}</td>\\n                  <td>{{ request.phoneNumber }}</td>\\n                  <td>{{ request.gender | titlecase }}</td>\\n                  <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                  <td>{{ request.isAvailable ? \\\"Yes\\\" : \\\"No\\\" }}</td>\\n                  <td>\\n                    <a\\n                      [routerLink]=\\\"['/admin/reports/provider-detail']\\\"\\n                      [queryParams]=\\\"{\\n                        id: request.id,\\n                        title: request.name\\n                      }\\\"\\n                      class=\\\"btn btn-info\\\"\\n                      ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    </a>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <app-pagination\\n              [totalRecords]=\\\"totalRecords\\\"\\n              [data]=\\\"allRequests\\\"\\n              [currentPage]=\\\"currentPage\\\"\\n              (clickedPage)=\\\"clickPage($event)\\\"\\n            >\\n            </app-pagination>\\n          </div>\\n          <!-- </ng-template>\\n            </li>\\n\\n            <li [ngbNavItem]=\\\"2\\\">\\n              <a ngbNavLink>Schedule Report</a>\\n              <ng-template ngbNavContent>\\n                <div\\n                  class=\\\"table-responsive entity-table\\\"\\n                  *ngIf=\\\"allRequests?.length; else nodata\\\"\\n                >\\n                  <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                      <tr>\\n                        <th class=\\\"\\\">#</th>\\n                        <th class=\\\"\\\">Name</th>\\n                        <th class=\\\"\\\">Email</th>\\n                        <th class=\\\"\\\">Contact</th>\\n                        <th class=\\\"\\\">Gender</th>\\n                        <th class=\\\"\\\">Zip</th>\\n                        <th>Joined At</th>\\n                        <th>Availability</th>\\n                        <th>More</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                        <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                        <td>{{ request.name | titlecase }}</td>\\n                        <td>{{ request.email }}</td>\\n                        <td>{{ request.phoneNumber }}</td>\\n                        <td>{{ request.gender | titlecase }}</td>\\n                        <td>{{ request.zipcode }}</td>\\n                        <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n                        <td>{{ request.isAvailable ? \\\"Yes\\\" : \\\"No\\\" }}</td>\\n                        <td>\\n                          <a\\n                            routerLink=\\\"/admin/reports/provider-detail\\\"\\n                            [queryParams]=\\\"{\\n                              id: request.id,\\n                              title: request.name\\n                            }\\\"\\n                            class=\\\"btn btn-info\\\"\\n                            ><i\\n                              class=\\\"fa fa-info-circle\\\"\\n                              aria-hidden=\\\"true\\\"\\n                            ></i>\\n                          </a>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                  <app-pagination\\n                    [totalRecords]=\\\"totalRecords\\\"\\n                    [data]=\\\"allRequests\\\"\\n                    [currentPage]=\\\"currentPage\\\"\\n                    (clickedPage)=\\\"clickPage($event)\\\"\\n                  >\\n                  </app-pagination>\\n                </div>\\n              </ng-template>\\n            </li>\\n          </ul> -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Rejected Requests\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            ></div>\\n          </div>\\n        </div>\\n        <div\\n          class=\\\"table-responsive entity-table\\\"\\n          *ngIf=\\\"allRequests?.length; else nodata\\\"\\n        >\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th class=\\\"\\\">#</th>\\n                <th class=\\\"\\\">Client Name</th>\\n                <th class=\\\"\\\">Email</th>\\n                <th class=\\\"\\\">Contact</th>\\n                <th>Request Date</th>\\n                <th>DOB</th>\\n                <th>Insurance Provider</th>\\n                <th>Insurance Number</th>\\n                <th>City</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                <td>\\n                  {{ request?.clientName | titlecase }}\\n                </td>\\n                <td>{{ request?.email }}</td>\\n                <td>\\n                  {{ request?.countryCode }}\\n                  {{ request?.phoneNumber }}\\n                </td>\\n                <td>{{ request.createdAt | date: \\\"medium\\\" }}</td>\\n\\n                <td>\\n                  {{ request?.dob | date: \\\"yyyy-MM-dd\\\" }}\\n                </td>\\n                <td>\\n                  {{ request?.insuranceProvider?.insurance }}\\n                </td>\\n                <td>\\n                  {{ request?.insuranceNumber }}\\n                </td>\\n                <td>{{ request?.city | titlecase }}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <app-pagination\\n            [totalRecords]=\\\"totalRecords\\\"\\n            [data]=\\\"allRequests\\\"\\n            [currentPage]=\\\"currentPage\\\"\\n            (clickedPage)=\\\"clickPage($event)\\\"\\n          >\\n          </app-pagination>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Sources - Details\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            >\\n              <form class=\\\"form-inline\\\">\\n                <div class=\\\"form-group hidden\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      name=\\\"datepicker\\\"\\n                      class=\\\"form-control\\\"\\n                      ngbDatepicker\\n                      #datepicker=\\\"ngbDatepicker\\\"\\n                      [autoClose]=\\\"'outside'\\\"\\n                      (dateSelect)=\\\"onDateSelection($event)\\\"\\n                      [displayMonths]=\\\"2\\\"\\n                      [dayTemplate]=\\\"t\\\"\\n                      outsideDays=\\\"hidden\\\"\\n                      [startDate]=\\\"fromDate!\\\"\\n                    />\\n                    <ng-template #t let-date let-focused=\\\"focused\\\">\\n                      <span\\n                        class=\\\"custom-day\\\"\\n                        [class.focused]=\\\"focused\\\"\\n                        [class.range]=\\\"isRange(date)\\\"\\n                        [class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n                        (mouseenter)=\\\"hoveredDate = date\\\"\\n                        (mouseleave)=\\\"hoveredDate = null\\\"\\n                      >\\n                        {{ date.day }}\\n                      </span>\\n                    </ng-template>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpFromDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"yyyy-mm-dd\\\"\\n                      name=\\\"dpFromDate\\\"\\n                      [value]=\\\"formatter.format(fromDate)\\\"\\n                      (input)=\\\"\\n                        fromDate = validateInput(fromDate, dpFromDate.value)\\n                      \\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group ml-2\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input\\n                      #dpToDate\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"yyyy-mm-dd\\\"\\n                      name=\\\"dpToDate\\\"\\n                      [value]=\\\"formatter.format(toDate)\\\"\\n                      (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\"\\n                    />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-secondary calendar\\\"\\n                        (click)=\\\"datepicker.toggle()\\\"\\n                        type=\\\"button\\\"\\n                      >\\n                        <img\\n                          class=\\\"calendarIcon\\\"\\n                          src=\\\"assets/img/calendarIcon.png\\\"\\n                        />\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n              <div>\\n                <input\\n                  (click)=\\\"refreshData()\\\"\\n                  type=\\\"button\\\"\\n                  value=\\\"Search\\\"\\n                  class=\\\"btn-blue-bg submitBtn\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"selectAType pt-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n            <div class=\\\"col-md-8 col-lg-8 chartBox\\\">\\n              <div class=\\\"text-center\\\">\\n                <h3 class=\\\"H300 semibold\\\">All Sources</h3>\\n                <div style=\\\"display: block\\\">\\n                  <canvas\\n                    baseChart\\n                    [data]=\\\"_sPieChartData\\\"\\n                    [labels]=\\\"_sPieChartLable\\\"\\n                    [chartType]=\\\"_sPieChartType\\\"\\n                    [options]=\\\"chartOptions\\\"\\n                    [plugins]=\\\"charPlugin\\\"\\n                    [legend]=\\\"chartLegend\\\"\\n                  >\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Social Media</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Care Cordinator</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"3\\\">\\n            <a ngbNavLink>Psychology Today</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"4\\\">\\n            <a ngbNavLink>Flyer/Advertisement</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"5\\\">\\n            <a ngbNavLink>Others</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"sources.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Submitted on</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let item of sources; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ item.clientName | titlecase }}</td>\\n                      <td>{{ item.email }}</td>\\n                      <td>\\n                        <span *ngIf=\\\"item.phoneNumber\\\"\\n                          >{{ item.countryCode }} {{ item.phoneNumber }}</span\\n                        >\\n                      </td>\\n                      <td>{{ item.createdAt | date: \\\"medium\\\" }}</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"sources\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \"<div class=\\\"right-content-Wrap\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Last 2 Days Report\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"selectAType pt-0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n            <div class=\\\"col-md-8 col-lg-8 chartBox\\\">\\n              <div class=\\\"text-center\\\">\\n                <h3 class=\\\"H300 semibold\\\">Last 2 Days</h3>\\n                <div style=\\\"display: block\\\">\\n                  <canvas\\n                    baseChart\\n                    [colors]=\\\"chartColors\\\"\\n                    [data]=\\\"_last2daysPieChartData\\\"\\n                    [labels]=\\\"_last2daysPieChartLable\\\"\\n                    [chartType]=\\\"_last2daysPieChartType\\\"\\n                    [options]=\\\"chartOptions\\\"\\n                    [plugins]=\\\"charPlugin\\\"\\n                    [legend]=\\\"chartLegend\\\"\\n                  >\\n                  </canvas>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2 col-lg-2 chartBox\\\"></div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Active</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Accepted At</th>\\n                      <th>Assigned Provider</th>\\n                      <th>Appointment Scheduled</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails?.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.countryCode }}\\n                        {{ request.patientDetails?.phoneNumber }}\\n                      </td>\\n                      <td>\\n                        {{ request.acceptTime | date: \\\"medium\\\" }}\\n                      </td>\\n                      <td>\\n                        {{ request.assignedDoctor?.name | titlecase }}\\n                      </td>\\n                      <td>\\n                        <span *ngIf=\\\"request.appointmentTime; else noAptTime\\\">{{\\n                          request?.appointmentTime | date: \\\"medium\\\"\\n                        }}</span>\\n                        <ng-template #noAptTime>Not Scheduled</ng-template>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Pending</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Pending Since</th>\\n                      <th>Provider(s) Notified</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails?.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.countryCode }}\\n                        {{ request.patientDetails?.phoneNumber }}\\n                      </td>\\n                      <td>\\n                        {{ request.createdAt | date: \\\"medium\\\" }}\\n                      </td>\\n                      <td>\\n                        {{ request?.patientDetails?.enquiryRequests?.length }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"3\\\">\\n            <a ngbNavLink>Cancelled</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Cancelled At</th>\\n                      <th>Cancelled By</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails?.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.countryCode }}\\n                        {{ request.patientDetails?.phoneNumber }}\\n                      </td>\\n                      <td>{{ request?.cancelTime | date: \\\"medium\\\" }}</td>\\n                      <td>\\n                        {{ request.assignedDoctor?.name | titlecase }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n          <li [ngbNavItem]=\\\"4\\\">\\n            <a ngbNavLink>Rejected</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                class=\\\"table-responsive entity-table\\\"\\n                *ngIf=\\\"allRequests?.length; else nodata\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Client Name</th>\\n                      <th class=\\\"\\\">Email</th>\\n                      <th class=\\\"\\\">Contact</th>\\n                      <th>Rejected At</th>\\n                      <th>Rejected By</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let request of allRequests; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.clientName | titlecase }}\\n                      </td>\\n                      <td>{{ request.patientDetails?.email }}</td>\\n                      <td>\\n                        {{ request.patientDetails?.countryCode }}\\n                        {{ request.patientDetails?.phoneNumber }}\\n                      </td>\\n                      <td>\\n                        {{ request?.rejectTime | date: \\\"medium\\\" }}\\n                      </td>\\n                      <td>\\n                        {{ request.assignedDoctor?.name | titlecase }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"allRequests\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                >\\n                </app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #nodata>\\n  <div class=\\\"noData\\\">No Records found</div>\\n</ng-template>\\n\"","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL2NhbmNlbGxlZC1yZXBvcnQvY2FuY2VsbGVkLXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFLFFBQVE7RUFDUixTQUFTO0VBQ1QsWUFBWTtFQUNaLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7O0VBRUUsa0NBQWtDO0VBQ2xDLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQjtBQUNGOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQiwwQkFBMEI7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9yZXBvcnRzL2NvbXBvbmVudHMvY2FuY2VsbGVkLXJlcG9ydC9jYW5jZWxsZWQtcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0QVR5cGUgLmRldGFpbFdyYXBDb21tb24ge1xuICBoZWlnaHQ6IDIwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uc2VsZWN0QVR5cGUgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmRldGFpbFdyYXBDb21tb24ge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHBhZGRpbmc6IDI1cHg7XG4gIG1hcmdpbjogMjVweDtcbiAgYmFja2dyb3VuZDogI2ZkZmRmZDtcbiAgYm9yZGVyOiAycHggc29saWQgI2U4ZThlODtcbn1cblxuLmRldGFpbFdyYXBDb21tb24gLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbn1cblxuLmRldGFpbFdyYXBDb21tb24uYm9yZGVyLUNBQ0NDRiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNjYWNjY2Y7XG59XG5cbi5IMzAwIHtcbiAgZm9udC1zaXplOiAxLjNyZW07XG4gIGNvbG9yOiAjMWIzNDZhO1xufVxuXG4uY2hhcnRCb3gge1xuICBwYWRkaW5nOiAyMHB4IDEwcHhcbn1cblxuLmZvcm0tZ3JvdXAuaGlkZGVuIHtcbiAgd2lkdGg6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uY3VzdG9tLWRheSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMC4xODVyZW0gMC4yNXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDJyZW07XG4gIHdpZHRoOiAycmVtO1xufVxuXG4uY3VzdG9tLWRheS5mb2N1c2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcbn1cblxuLmN1c3RvbS1kYXkucmFuZ2UsXG4uY3VzdG9tLWRheTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyLCAxMTcsIDIxNik7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmN1c3RvbS1kYXkuZmFkZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDExNywgMjE2LCAwLjUpO1xufVxuXG4ubm9EYXRhIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDEwJVxufVxuXG4ubm90ZSB7XG4gIHBhZGRpbmc6IDIwcHggMjBweDtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDAuODVyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-cancelled-report\",\n  templateUrl: \"./cancelled-report.component.html\",\n  styleUrls: [\"./cancelled-report.component.css\"],\n})\nexport class CancelledReportComponent implements OnInit {\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  currentPage = 1;\n  totalRecords = 0;\n\n  allRequests = [];\n  constructor(\n    private reportService: ReportService,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter\n  ) {\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.getCancelledReports();\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getCancelledReports();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  getCancelledReports(pageNo?) {\n    this.currentPage = pageNo ? pageNo : this.currentPage;\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getCancelledReports(params).subscribe((data) => {\n      this.allRequests = data.data ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px;\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%;\\n}\\n\\n.right-content-Wrap {\\n  padding: 30px 30px;\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL2hpZ2gtZWQtdXNlcnMvaGlnaC1lZC11c2Vycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsUUFBUTtFQUNSLFNBQVM7RUFDVCxZQUFZO0VBQ1osVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTs7RUFFRSxrQ0FBa0M7RUFDbEMsWUFBWTtBQUNkOztBQUVBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL2hpZ2gtZWQtdXNlcnMvaGlnaC1lZC11c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdEFUeXBlIC5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnNlbGVjdEFUeXBlIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAyNXB4O1xuICBtYXJnaW46IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZGZkZmQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlOGU4ZTg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIC5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uLmJvcmRlci1DQUNDQ0Yge1xuICBib3JkZXI6IDJweCBzb2xpZCAjY2FjY2NmO1xufVxuXG4uSDMwMCB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBjb2xvcjogIzFiMzQ2YTtcbn1cblxuLmNoYXJ0Qm94IHtcbiAgcGFkZGluZzogMjBweCAxMHB4O1xufVxuXG4uZm9ybS1ncm91cC5oaWRkZW4ge1xuICB3aWR0aDogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5jdXN0b20tZGF5IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAwLjE4NXJlbSAwLjI1cmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMnJlbTtcbiAgd2lkdGg6IDJyZW07XG59XG5cbi5jdXN0b20tZGF5LmZvY3VzZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2O1xufVxuXG4uY3VzdG9tLWRheS5yYW5nZSxcbi5jdXN0b20tZGF5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIsIDExNywgMjE2KTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY3VzdG9tLWRheS5mYWRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMiwgMTE3LCAyMTYsIDAuNSk7XG59XG5cbi5ub0RhdGEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTAlO1xufVxuXG4ucmlnaHQtY29udGVudC1XcmFwIHtcbiAgcGFkZGluZzogMzBweCAzMHB4O1xufVxuXG4ubm90ZSB7XG4gIHBhZGRpbmc6IDIwcHggMjBweDtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDAuODVyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-high-ed-users\",\n  templateUrl: \"./high-ed-users.component.html\",\n  styleUrls: [\"./high-ed-users.component.css\"],\n})\nexport class HighEdUsersComponent implements OnInit {\n  currentPage = 1;\n  active = 1;\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  allRequests = [];\n  totalRecords = 0;\n\n  constructor(\n    private reportService: ReportService,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private router: Router\n  ) {\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.getHighUserOfED();\n  }\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getHighUserOfED();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  getHighUserOfED(pageNo?) {\n    this.currentPage = pageNo ? pageNo : this.currentPage;\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getHighEDUsers(params).subscribe((data) => {\n      this.allRequests = data.data ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n\n  activeIdChange(activeId) {\n    // this.source = Object.keys(this.metaData.sources)[activeId - 1];\n    this.currentPage = 1;\n    this.getHighUserOfED();\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px;\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%;\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n.ngbToggleDropdown {\\n  max-height: 240px;\\n  overflow-y: scroll;\\n  transform: translateY(10px) !important;\\n}\\n\\n.dropdownItem {\\n  padding: 10px;\\n  cursor: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL2lucXVpcnktcmVwb3J0cy9pbnF1aXJ5LXJlcG9ydHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFFBQVE7RUFDUixTQUFTO0VBQ1QsWUFBWTtFQUNaLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7O0VBRUUsa0NBQWtDO0VBQ2xDLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsc0NBQXNDO0FBQ3hDOztBQUNBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy9pbnF1aXJ5LXJlcG9ydHMvaW5xdWlyeS1yZXBvcnRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0QVR5cGUgLmRldGFpbFdyYXBDb21tb24ge1xuICBoZWlnaHQ6IDIwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uc2VsZWN0QVR5cGUgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmRldGFpbFdyYXBDb21tb24ge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHBhZGRpbmc6IDI1cHg7XG4gIG1hcmdpbjogMjVweDtcbiAgYmFja2dyb3VuZDogI2ZkZmRmZDtcbiAgYm9yZGVyOiAycHggc29saWQgI2U4ZThlODtcbn1cblxuLmRldGFpbFdyYXBDb21tb24gLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbn1cblxuLmRldGFpbFdyYXBDb21tb24uYm9yZGVyLUNBQ0NDRiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNjYWNjY2Y7XG59XG5cbi5IMzAwIHtcbiAgZm9udC1zaXplOiAxLjNyZW07XG4gIGNvbG9yOiAjMWIzNDZhO1xufVxuXG4uY2hhcnRCb3gge1xuICBwYWRkaW5nOiAyMHB4IDEwcHg7XG59XG5cbi5mb3JtLWdyb3VwLmhpZGRlbiB7XG4gIHdpZHRoOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmN1c3RvbS1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAycmVtO1xuICB3aWR0aDogMnJlbTtcbn1cblxuLmN1c3RvbS1kYXkuZm9jdXNlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG59XG5cbi5jdXN0b20tZGF5LnJhbmdlLFxuLmN1c3RvbS1kYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMiwgMTE3LCAyMTYpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jdXN0b20tZGF5LmZhZGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAxMTcsIDIxNiwgMC41KTtcbn1cblxuLm5vRGF0YSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAxMCU7XG59XG5cbi5ub3RlIHtcbiAgcGFkZGluZzogMjBweCAyMHB4O1xuICBjb2xvcjogcmVkO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC44NXJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5uZ2JUb2dnbGVEcm9wZG93biB7XG4gIG1heC1oZWlnaHQ6IDI0MHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMHB4KSAhaW1wb3J0YW50O1xufVxuLmRyb3Bkb3duSXRlbSB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGN1cnNvcjogYXV0bztcbn1cbiJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n  NgbDateStruct,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport Swal from \"sweetalert2\";\nimport { ChartType, ChartOptions, ChartDataSets } from \"chart.js\";\nimport {\n  SingleDataSet,\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n} from \"ng2-charts\";\nimport { AlertService } from \"src/app/core/_alert\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-inquiry-reports\",\n  templateUrl: \"./inquiry-reports.component.html\",\n  styleUrls: [\"./inquiry-reports.component.css\"],\n})\nexport class InquiryReportsComponent implements OnInit {\n  active = 1;\n  public reports;\n  public chartOptions: ChartOptions = {\n    responsive: true,\n  };\n  colours = [\"#4661EE\", \"#EC5657\", \"#1BCDD1\", \"#8FAABB\"];\n  public chartLegend = true;\n  public charPlugin = [];\n\n  public _pBarChartLabels: Label[] = [];\n  public _pBarChartType: ChartType = \"bar\";\n  public _pBarChartData: ChartDataSets[] = [];\n\n  public _allPieChartLable: Label[] = [\n    [\"Active\"],\n    [\"Pending\"],\n    [\"Cancelled\"],\n    [\"Rejected\"],\n  ];\n  public _allPieChartData: SingleDataSet = [];\n  public _allPieChartType: ChartType = \"pie\";\n\n  doctors = [];\n  currentPage = 1;\n  totalRecords = 0;\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  status = \"active\";\n\n  public statuses = {\n    1: \"active\",\n    2: \"pending\",\n    3: \"cancelled\",\n    4: \"rejected\",\n  };\n\n  allRequests = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private reportService: ReportService,\n    private alert: AlertService\n  ) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((data) => {\n      this.reports = data.reports.data;\n    });\n    this.setPieChart2();\n    this.setBarChart1();\n    this.getAllInquiries();\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  getAllInquiries() {\n    const params = {\n      status: this.status,\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getAllRequetDetails(params).subscribe((data) => {\n      this.allRequests = data.data.rows ? data.data.rows : [];\n      this.allRequests.forEach((req) => {\n        if (req.patientDetails.dob) {\n          req.patientDetails.dob = req.patientDetails.dob.split(\"T\")[0];\n        }\n      });\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getAllInquiries();\n  }\n\n  setPieChart2() {\n    this.reports.allRequestsByStatus.map((item) => {\n      if (item.status == \"active\") {\n        this._allPieChartData[0] = item.count;\n      }\n      if (item.status == \"pending\") {\n        this._allPieChartData[1] = item.count;\n      }\n      if (item.status == \"cancelled\") {\n        this._allPieChartData[2] = item.count;\n      }\n      if (item.status == \"rejected\") {\n        this._allPieChartData[3] = item.count;\n      }\n    });\n  }\n\n  setBarChart1() {\n    this._pBarChartLabels = [];\n    this._pBarChartData = [];\n    this._pBarChartLabels = this.reports.allCases.months;\n    this._pBarChartData.push({\n      data: new Array(this._pBarChartLabels.length).fill(0),\n      label: \"Active\",\n      backgroundColor: \"#8FD8D4\",\n      hoverBackgroundColor: \"#20B2AA\",\n    });\n\n    this._pBarChartData.push({\n      data: new Array(this._pBarChartLabels.length).fill(0),\n      label: \"Pending\",\n      backgroundColor: \"#ffcccb\",\n      hoverBackgroundColor: \"#ff726f\",\n    });\n\n    this._pBarChartData.push({\n      data: new Array(this._pBarChartLabels.length).fill(0),\n      label: \"Cancelled\",\n      backgroundColor: \"#CCCC00\",\n      hoverBackgroundColor: \"#666600\",\n    });\n\n    this._pBarChartData.push({\n      data: new Array(this._pBarChartLabels.length).fill(0),\n      label: \"Rejected\",\n      backgroundColor: \"#ff4c4c\",\n      hoverBackgroundColor: \"darkred\",\n    });\n\n    this.reports.allCases.active.map((item) => {\n      this._pBarChartData.find((item) => item.label == \"Active\").data[\n        this._pBarChartLabels.indexOf(item.month)\n      ] = item.count;\n    });\n\n    this.reports.allCases.pending.map((item) => {\n      this._pBarChartData.find((item) => item.label == \"Pending\").data[\n        this._pBarChartLabels.indexOf(item.month)\n      ] = item.count;\n    });\n\n    this.reports.allCases.cancelled.map((item) => {\n      this._pBarChartData.find((item) => item.label == \"Cancelled\").data[\n        this._pBarChartLabels.indexOf(item.month)\n      ] = item.count;\n    });\n\n    this.reports.allCases.rejected.map((item) => {\n      this._pBarChartData.find((item) => item.label == \"Rejected\").data[\n        this._pBarChartLabels.indexOf(item.month)\n      ] = item.count;\n    });\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  activeIdChange(activeId) {\n    this.status = this.statuses[activeId];\n    this.currentPage = 1;\n    this.getAllInquiries();\n  }\n\n  refreshData() {\n    this.getAllInquiries();\n    this.refreshReport();\n  }\n\n  refreshReport() {\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n    };\n    this.reportService.getReports(params).subscribe((data) => {\n      this.reports = data.data;\n      this.setPieChart2();\n      this.setBarChart1();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy9uZXctcmVxdWVzdHMvbmV3LXJlcXVlc3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { AlertService } from \"src/app/core/_alert\";\nimport { ReportService } from \"../../services/reports.services\";\nimport Swal from \"sweetalert2\";\nimport { environment } from \"src/environments/environment\";\nimport { saveAs } from \"file-saver\";\n\n@Component({\n  selector: \"app-new-requests\",\n  templateUrl: \"./new-requests.component.html\",\n  styleUrls: [\"./new-requests.component.css\"],\n})\nexport class NewRequestsComponent implements OnInit {\n  allRequests: any;\n  currentPage = 1;\n  totalRecords = 0;\n  bucketUrl = environment.awsBucketUrl;\n  constructor(private report: ReportService, private alert: AlertService) {}\n\n  ngOnInit() {\n    this.fetchEnquiryRequests();\n  }\n\n  fetchEnquiryRequests() {\n    this.report\n      .fetchEnquiryRequests({ status: \"PENDING\", pageNumber: this.currentPage })\n      .subscribe((data) => {\n        this.allRequests = data.data.rows;\n        this.totalRecords = data.data.count;\n      });\n  }\n\n  changeStatus(id, status) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      // text: \"You will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Confirm\",\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.report\n          .changeEnquiryStatus({ enquiryId: id, status: status })\n          .subscribe((data) => {\n            this.alert.success(\"Status successully changed.\");\n            this.fetchEnquiryRequests();\n          });\n      }\n    });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.fetchEnquiryRequests();\n  }\n\n  download() {\n    this.report.downloadFile().subscribe((blob) => {\n      saveAs(blob, \"dump.gz\");\n    });\n  }\n}\n","export default \".noData {\\n  text-align: center;\\n  margin: 10%\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n.right-content-Wrap\\n{\\n    padding: 30px 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3Byb3ZpZGVycy1saXN0aW5nL3Byb3ZpZGVyLWRldGFpbC9wcm92aWRlci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQjtBQUNGOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQiwwQkFBMEI7QUFDNUI7O0FBQ0E7O0lBRUksa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3Byb3ZpZGVycy1saXN0aW5nL3Byb3ZpZGVyLWRldGFpbC9wcm92aWRlci1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ub0RhdGEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTAlXG59XG5cbi5ub3RlIHtcbiAgcGFkZGluZzogMjBweCAyMHB4O1xuICBjb2xvcjogcmVkO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC44NXJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4ucmlnaHQtY29udGVudC1XcmFwXG57XG4gICAgcGFkZGluZzogMzBweCAzMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ChartOptions, ChartType } from \"chart.js\";\nimport {\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n  SingleDataSet,\n} from \"ng2-charts\";\nimport { ReportService } from \"../../../services/reports.services\";\n\n@Component({\n  selector: \"app-provider-detail\",\n  templateUrl: \"./provider-detail.component.html\",\n  styleUrls: [\"./provider-detail.component.css\"],\n})\nexport class ProviderDetailComponent implements OnInit {\n  public doctor: any;\n  public title: any;\n  public doctorId: any;\n  active = 1;\n  currentPage = 1;\n  totalRecords = 0;\n  status = \"active\";\n  public statistics: any;\n  statusCount: any;\n  public statuses = {\n    1: \"active\",\n    2: \"all\",\n    3: \"cancelled\",\n    4: \"rejected\",\n  };\n  allRequests = [];\n  public chartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public chartLegend = true;\n  public charPlugin = [];\n  public _chartLabels: Label[] = [];\n  public _chartData: SingleDataSet = [];\n  public _charType: ChartType = \"pie\";\n\n  constructor(\n    private router: ActivatedRoute,\n    private reportService: ReportService\n  ) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n  }\n\n  ngOnInit() {\n    this.doctorId = this.router.snapshot.queryParamMap.get(\"id\");\n    this.title = this.router.snapshot.queryParamMap.get(\"title\");\n    if (this.doctorId) {\n      this.getProviderReport();\n    }\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getProviderReport();\n  }\n\n  getProviderReport() {\n    const params = {\n      status: this.status,\n      id: this.doctorId,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getProviderDetails(params).subscribe((data) => {\n      this.doctor = data.data.cases ? data.data.cases.rows : [];\n      this.statistics = data.data.statistics;\n      this.statusCount = data.data.statusCount;\n      this.totalRecords = data.data.cases.count\n        ? data.data.cases.count\n        : this.doctor.length;\n      this.setPieChart3();\n    });\n  }\n\n  activeIdChange(activeId) {\n    this.status = this.statuses[activeId];\n    this.currentPage = 1;\n    this.getProviderReport();\n  }\n\n  setPieChart3() {\n    this._chartData = [];\n    this._chartLabels = [];\n\n    this._chartLabels.push(\"Downloads\");\n    this._chartData.push(this.statistics.downloads);\n    this._chartLabels.push(\"Cancelled\");\n    this._chartData.push(this.statusCount.cancelled);\n    this._chartLabels.push(\"Rejected\");\n    this._chartData.push(this.statusCount.rejected);\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%\\n}\\n\\n.right-content-Wrap {\\n  padding: 30px 30px;\\n}\\n\\n.note {\\n  padding: 20px 20px;\\n  color: red;\\n  font-weight: 600;\\n  text-align: center;\\n  font-size: 0.85rem;\\n  text-decoration: underline;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3Byb3ZpZGVycy1saXN0aW5nL3Byb3ZpZGVycy1saXN0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsYUFBYTtBQUNmOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRTtBQUNGOztBQUVBO0VBQ0UsUUFBUTtFQUNSLFNBQVM7RUFDVCxZQUFZO0VBQ1osVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTs7RUFFRSxrQ0FBa0M7RUFDbEMsWUFBWTtBQUNkOztBQUVBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLDBCQUEwQjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy9wcm92aWRlcnMtbGlzdGluZy9wcm92aWRlcnMtbGlzdGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdEFUeXBlIC5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnNlbGVjdEFUeXBlIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAyNXB4O1xuICBtYXJnaW46IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZGZkZmQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlOGU4ZTg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIC5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uLmJvcmRlci1DQUNDQ0Yge1xuICBib3JkZXI6IDJweCBzb2xpZCAjY2FjY2NmO1xufVxuXG4uSDMwMCB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBjb2xvcjogIzFiMzQ2YTtcbn1cblxuLmNoYXJ0Qm94IHtcbiAgcGFkZGluZzogMjBweCAxMHB4XG59XG5cbi5mb3JtLWdyb3VwLmhpZGRlbiB7XG4gIHdpZHRoOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmN1c3RvbS1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAycmVtO1xuICB3aWR0aDogMnJlbTtcbn1cblxuLmN1c3RvbS1kYXkuZm9jdXNlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG59XG5cbi5jdXN0b20tZGF5LnJhbmdlLFxuLmN1c3RvbS1kYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMiwgMTE3LCAyMTYpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jdXN0b20tZGF5LmZhZGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAxMTcsIDIxNiwgMC41KTtcbn1cblxuLm5vRGF0YSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAxMCVcbn1cblxuLnJpZ2h0LWNvbnRlbnQtV3JhcCB7XG4gIHBhZGRpbmc6IDMwcHggMzBweDtcbn1cblxuLm5vdGUge1xuICBwYWRkaW5nOiAyMHB4IDIwcHg7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAwLjg1cmVtO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-providers-listing\",\n  templateUrl: \"./providers-listing.component.html\",\n  styleUrls: [\"./providers-listing.component.css\"],\n})\nexport class ProvidersListingComponent implements OnInit {\n  currentPage = 1;\n  active = 1;\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  allRequests = [];\n  totalRecords = 0;\n\n  constructor(\n    private reportService: ReportService,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private router: Router\n  ) {\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.getProvidersList();\n  }\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getProvidersList();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  getProvidersList(pageNo?) {\n    this.currentPage = pageNo ? pageNo : this.currentPage;\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getProviders(params).subscribe((data) => {\n      this.allRequests = data.data ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n\n  activeIdChange(activeId) {\n    // this.source = Object.keys(this.metaData.sources)[activeId - 1];\n    this.currentPage = 1;\n    this.getProvidersList();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy9yZWplY3RlZC1yZXF1ZXN0cy9yZWplY3RlZC1yZXF1ZXN0cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { AlertService } from \"src/app/core/_alert\";\nimport { ReportService } from \"../../services/reports.services\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-rejected-requests\",\n  templateUrl: \"./rejected-requests.component.html\",\n  styleUrls: [\"./rejected-requests.component.css\"],\n})\nexport class RejectedRequestsComponent implements OnInit {\n  allRequests;\n  currentPage = 1;\n  totalRecords = 0;\n  constructor(private report: ReportService, private alert: AlertService) {}\n\n  ngOnInit() {\n    this.fetchEnquiryRequests();\n  }\n\n  fetchEnquiryRequests() {\n    this.report\n      .fetchEnquiryRequests({\n        status: \"REJECTED\",\n        pageNumber: this.currentPage,\n      })\n      .subscribe((data) => {\n        this.allRequests = data.data.rows;\n        this.totalRecords = data.data.count;\n      });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.fetchEnquiryRequests();\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  height: 200px;\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.chartBox {\\n  padding: 20px 10px\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%\\n}\\n\\n.form-group.hidden {\\n  width: 0;\\n  margin: 0;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.custom-day {\\n  text-align: center;\\n  padding: 0.185rem 0.25rem;\\n  display: inline-block;\\n  height: 2rem;\\n  width: 2rem;\\n}\\n\\n.custom-day.focused {\\n  background-color: #e6e6e6;\\n}\\n\\n.custom-day.range,\\n.custom-day:hover {\\n  background-color: rgb(2, 117, 216);\\n  color: white;\\n}\\n\\n.custom-day.faded {\\n  background-color: rgba(2, 117, 216, 0.5);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3NvdXJjZXMvc291cmNlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQjtBQUNGOztBQUVBO0VBQ0UsUUFBUTtFQUNSLFNBQVM7RUFDVCxZQUFZO0VBQ1osVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTs7RUFFRSxrQ0FBa0M7RUFDbEMsWUFBWTtBQUNkOztBQUVBO0VBQ0Usd0NBQXdDO0FBQzFDIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vcmVwb3J0cy9jb21wb25lbnRzL3NvdXJjZXMvc291cmNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdEFUeXBlIC5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnNlbGVjdEFUeXBlIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAyNXB4O1xuICBtYXJnaW46IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZGZkZmQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlOGU4ZTg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIC5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uLmJvcmRlci1DQUNDQ0Yge1xuICBib3JkZXI6IDJweCBzb2xpZCAjY2FjY2NmO1xufVxuXG4uSDMwMCB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBjb2xvcjogIzFiMzQ2YTtcbn1cblxuLmNoYXJ0Qm94IHtcbiAgcGFkZGluZzogMjBweCAxMHB4XG59XG5cbi5ub0RhdGEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTAlXG59XG5cbi5mb3JtLWdyb3VwLmhpZGRlbiB7XG4gIHdpZHRoOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmN1c3RvbS1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAycmVtO1xuICB3aWR0aDogMnJlbTtcbn1cblxuLmN1c3RvbS1kYXkuZm9jdXNlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG59XG5cbi5jdXN0b20tZGF5LnJhbmdlLFxuLmN1c3RvbS1kYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMiwgMTE3LCAyMTYpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jdXN0b20tZGF5LmZhZGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAxMTcsIDIxNiwgMC41KTtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  NgbCalendar,\n  NgbDate,\n  NgbDateParserFormatter,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ChartOptions, ChartType } from \"chart.js\";\nimport {\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n  SingleDataSet,\n} from \"ng2-charts\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-sources\",\n  templateUrl: \"./sources.component.html\",\n  styleUrls: [\"./sources.component.css\"],\n})\nexport class SourcesComponent implements OnInit {\n  active = 1;\n  currentPage = 1;\n  totalRecords = 0;\n  public reports;\n  public metaData;\n  public chartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public chartLegend = true;\n  public charPlugin = [];\n  public _sPieChartLable: Label[] = [];\n  public _sPieChartData: SingleDataSet = [];\n  public _sPieChartType: ChartType = \"pie\";\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n  sources = [];\n  source = \"sm\";\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter,\n    private reportService: ReportService\n  ) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n    this.fromDate = calendar.getPrev(calendar.getToday(), \"m\", 1);\n    this.toDate = calendar.getToday();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((data) => {\n      this.metaData = data.metaData;\n      this.reports = data.reports.data;\n    });\n    this.setPieChart1();\n    this.getAllSources();\n  }\n\n  setPieChart1() {\n    this._sPieChartLable = [];\n    this._sPieChartData = [];\n    this.reports.sources.map((item) => {\n      this._sPieChartLable.push(\n        this.capitalizeFirstLetter(this.metaData.sources[item.source])\n      );\n      this._sPieChartData.push(item.count);\n    });\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  getAllSources() {\n    const params = {\n      source: this.source,\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.getSourceDetails(params).subscribe((data) => {\n      this.sources = data.data.rows ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.sources.length;\n    });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getAllSources();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n\n  activeIdChange(activeId) {\n    this.source = Object.keys(this.metaData.sources)[activeId - 1];\n    this.currentPage = 1;\n    this.getAllSources();\n  }\n\n  refreshData() {\n    this.getAllSources();\n    this.refreshReport();\n  }\n\n  refreshReport() {\n    const params = {\n      from: `${this.fromDate.month}/${this.fromDate.day}/${this.fromDate.year}`,\n      to: `${this.toDate.month}/${this.toDate.day}/${this.toDate.year}`,\n    };\n    this.reportService.getReports(params).subscribe((data) => {\n      this.reports = data.data;\n      this.setPieChart1();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlcG9ydHMvY29tcG9uZW50cy90d28tZGF5cy1yZXBvcnQvdHdvLWRheXMtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ChartOptions, ChartType } from \"chart.js\";\nimport {\n  Label,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip,\n  SingleDataSet,\n  Color,\n} from \"ng2-charts\";\nimport { ReportService } from \"../../services/reports.services\";\n\n@Component({\n  selector: \"app-two-days-report\",\n  templateUrl: \"./two-days-report.component.html\",\n  styleUrls: [\"./two-days-report.component.css\"],\n})\nexport class TwoDaysReportComponent implements OnInit {\n  active = 1;\n  currentPage = 1;\n  totalRecords = 0;\n  status = \"active\";\n  public statuses = {\n    1: \"active\",\n    2: \"pending\",\n    3: \"cancelled\",\n    4: \"rejected\",\n  };\n  chartColors: Color[] = [\n    {\n      backgroundColor: [\"#8FD8D4\", \"#ffcccb\", \"#CCCC00\", \"#ff4c4c\"],\n      hoverBackgroundColor: [\"#20B2AA\", \"#ff726f\", \"#666600\", \"darkred\"],\n    },\n  ];\n  allRequests = [];\n  public reports;\n  public metaData;\n  public chartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public chartLegend = true;\n  public charPlugin = [];\n  public _last2daysPieChartLable: Label[] = [\n    [\"Active\"],\n    [\"Pending\"],\n    [\"Cancelled\"],\n    [\"Rejected\"],\n  ];\n  public _last2daysPieChartData: SingleDataSet = new Array(4).fill(0);\n  public _last2daysPieChartType: ChartType = \"pie\";\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private reportService: ReportService\n  ) {\n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((data) => {\n      this.metaData = data.metaData;\n      this.reports = data.reports.data;\n    });\n    this.setPieChart3();\n    this.getAllInquiries();\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    this.getAllInquiries();\n  }\n\n  setPieChart3() {\n    this.reports.last2DaysRequests.map((item) => {\n      if (item.status == \"active\") {\n        this._last2daysPieChartData[0] = item.count;\n      }\n      if (item.status == \"pending\") {\n        this._last2daysPieChartData[1] = item.count;\n      }\n      if (item.status == \"cancelled\") {\n        this._last2daysPieChartData[2] = item.count;\n      }\n      if (item.status == \"rejected\") {\n        this._last2daysPieChartData[3] = item.count;\n      }\n    });\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  getAllInquiries() {\n    const params = {\n      status: this.status,\n      pageNumber: this.currentPage,\n    };\n    this.reportService.last2DaysReport(params).subscribe((data) => {\n      this.allRequests = data.data.rows ? data.data.rows : [];\n      this.totalRecords = data.data.count\n        ? data.data.count\n        : this.allRequests.length;\n    });\n  }\n\n  activeIdChange(activeId) {\n    this.status = this.statuses[activeId];\n    this.currentPage = 1;\n    this.getAllInquiries();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CancelledReportComponent } from \"./components/cancelled-report/cancelled-report.component\";\nimport { InquiryReportsComponent } from \"./components/inquiry-reports/inquiry-reports.component\";\nimport { ProviderDetailComponent } from \"./components/providers-listing/provider-detail/provider-detail.component\";\nimport { ProvidersListingComponent } from \"./components/providers-listing/providers-listing.component\";\nimport { SourcesComponent } from \"./components/sources/sources.component\";\nimport { TwoDaysReportComponent } from \"./components/two-days-report/two-days-report.component\";\nimport { HighEdUsersComponent } from \"./components/high-ed-users/high-ed-users.component\";\nimport { NewRequestsComponent } from \"./components/new-requests/new-requests.component\";\nimport { RejectedRequestsComponent } from \"./components/rejected-requests/rejected-requests.component\";\n\nconst routes: Routes = [\n  { path: \"rejected-requests\", component: RejectedRequestsComponent },\n  { path: \"new-requests\", component: NewRequestsComponent },\n  {\n    path: \"inquiries\",\n    component: InquiryReportsComponent,\n  },\n  {\n    path: \"two-days-report\",\n    component: TwoDaysReportComponent,\n  },\n  {\n    path: \"sources\",\n    component: SourcesComponent,\n  },\n  {\n    path: \"cancelled-report\",\n    component: CancelledReportComponent,\n  },\n  {\n    path: \"providers\",\n    component: ProvidersListingComponent,\n  },\n  {\n    path: \"provider-detail\",\n    component: ProviderDetailComponent,\n  },\n  {\n    path: \"edusers\",\n    component: HighEdUsersComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\nimport { InquiryReportsComponent } from \"./components/inquiry-reports/inquiry-reports.component\";\nimport { ChartsModule } from \"ng2-charts\";\nimport { TwoDaysReportComponent } from \"./components/two-days-report/two-days-report.component\";\nimport { SourcesComponent } from \"./components/sources/sources.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CancelledReportComponent } from \"./components/cancelled-report/cancelled-report.component\";\nimport { ProvidersListingComponent } from \"./components/providers-listing/providers-listing.component\";\nimport { ProviderDetailComponent } from \"./components/providers-listing/provider-detail/provider-detail.component\";\nimport { HighEdUsersComponent } from \"./components/high-ed-users/high-ed-users.component\";\nimport { NewRequestsComponent } from './components/new-requests/new-requests.component';\nimport { RejectedRequestsComponent } from './components/rejected-requests/rejected-requests.component';\n\n@NgModule({\n  declarations: [\n    InquiryReportsComponent,\n    TwoDaysReportComponent,\n    SourcesComponent,\n    CancelledReportComponent,\n    ProvidersListingComponent,\n    ProviderDetailComponent,\n    HighEdUsersComponent,\n    NewRequestsComponent,\n    RejectedRequestsComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReportsRoutingModule,\n    ChartsModule,\n    SharedModule,\n    NgbModule,\n    FormsModule,\n  ],\n})\nexport class ReportsModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { ApiService } from \"src/app/core/services/api.service\";\nimport { ApiEndPoints } from \"src/app/core/constants/api-endpoints\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ReportService {\n  constructor(private http: HttpClient) {}\n\n  getAllEnquiryDetails(filters: HttpParams): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.allRequestDetails, {\n      params,\n    });\n  }\n\n  getAllRequetDetails(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.allRequestDetails, {\n      params,\n    });\n  }\n\n  getSourceDetails(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.allSourceDetails, {\n      params,\n    });\n  }\n\n  last2DaysReport(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.last2DaysReport, {\n      params,\n    });\n  }\n\n  getReports(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.inquiryReports, {\n      params,\n    });\n  }\n\n  getCancelledReports(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.cancelledReports, {\n      params,\n    });\n  }\n\n  getProviders(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.getProviders, {\n      params,\n    });\n  }\n\n  getHighEDUsers(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.getHighEDUsers, {\n      params,\n    });\n  }\n\n  getProviderDetails(filters): Observable<any> {\n    let params: HttpParams = filters;\n    return this.http.get(`${ApiEndPoints.getProviderDetails}${filters.id}`, {\n      params,\n    });\n  }\n\n  /**\n   * change status of enquiry by admin\n   * @param payload\n   * @returns\n   */\n  changeEnquiryStatus(payload): Observable<any> {\n    return this.http.patch(ApiEndPoints.changeEnquiryStatus, payload);\n  }\n\n  /**\n   * fetch enquiry requests based on params\n   * @param params\n   * @returns\n   */\n  fetchEnquiryRequests(args): Observable<any> {\n    let params: HttpParams = args;\n    return this.http.get(ApiEndPoints.adminEnquiryRequests, { params });\n  }\n\n  downloadFile(): Observable<any> {\n    return this.http.get(ApiEndPoints.downloadFile);\n  }\n}\n"],"sourceRoot":"webpack:///"}