{"version":3,"sources":["src/app/admin/dashboard/dashboard/dashboard.component.html","src/app/admin/dashboard/dashboard-routing.module.ts","src/app/admin/dashboard/dashboard.module.ts","src/app/admin/dashboard/dashboard.service.ts","src/app/admin/dashboard/dashboard/dashboard.component.css","src/app/admin/dashboard/dashboard/dashboard.component.ts","src/app/core/resolvers/dashboard-data.resolver.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"selectAType pt-0 bg-grey\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <a class=\\\"hovover\\\">\\n        <div class=\\\"detailWrapCommon\\\">\\n          <div class=\\\"text-center w-100\\\">\\n            <h3 class=\\\"H300 semibold\\\">Total Inquiries</h3>\\n            <div class=\\\"dashboard-val\\\">{{ data.totalInquiry }}</div>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <a class=\\\"hovover\\\">\\n        <div class=\\\"detailWrapCommon\\\">\\n          <div class=\\\"text-center w-100\\\">\\n            <h3 class=\\\"H300 semibold\\\">Total Registration Requests</h3>\\n            <div class=\\\"dashboard-val\\\">{{ data.totalRequest }}</div>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <a class=\\\"hovover\\\">\\n        <div class=\\\"detailWrapCommon\\\">\\n          <div class=\\\"text-center w-100\\\">\\n            <h3 class=\\\"H300 semibold\\\">Total Approved Registrations</h3>\\n            <div class=\\\"dashboard-val\\\">{{ data.totalApprovedDoctors }}</div>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <a class=\\\"hovover\\\">\\n        <div class=\\\"detailWrapCommon\\\">\\n          <div class=\\\"text-center w-100\\\">\\n            <h3 class=\\\"H300 semibold\\\">\\n              Average Time taken by clinician to accept a request\\n            </h3>\\n            <div class=\\\"dashboard-val\\\">\\n              {{ data.avgAcceptanceTime }}\\n            </div>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"right-content-Wrap bg-grey\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Clinicians Average Report\\n        <div class=\\\"ml-auto\\\"></div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            ></div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Average Acceptance Report</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                *ngIf=\\\"doctors?.length; else nodata\\\"\\n                class=\\\"table-responsive entity-table\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Clinician Name</th>\\n                      <th class=\\\"\\\">Clinician Email</th>\\n                      <th class=\\\"\\\">Average Acceptance Time</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let doctor of doctors; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ doctor?.assignedDoctor?.name }}</td>\\n                      <td>{{ doctor?.assignedDoctor?.email }}</td>\\n                      <td>\\n                        {{\\n                          doctor?.avgAcceptaceTime\\n                            ? doctor?.avgAcceptaceTime\\n                            : \\\"0.00\\\"\\n                        }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctors\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                ></app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Average Schedule Report</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                *ngIf=\\\"doctorSchedules?.length; else nodata\\\"\\n                class=\\\"table-responsive entity-table\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Clinician Name</th>\\n                      <th class=\\\"\\\">Clinician Email</th>\\n                      <th class=\\\"\\\">Average Schedule Time</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let doctor of doctorSchedules; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ doctor?.assignedDoctor?.name }}</td>\\n                      <td>{{ doctor?.assignedDoctor?.email }}</td>\\n                      <td>\\n                        {{\\n                          doctor?.avgScheduleTime\\n                            ? doctor?.avgScheduleTime\\n                            : \\\"0.00\\\"\\n                        }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctorSchedules\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                ></app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n        <ng-template #nodata>\\n          <div class=\\\"noData\\\">No Records found</div>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { DashboardDataResolver } from \"src/app/core/resolvers/dashboard-data.resolver\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: DashboardComponent,\n    resolve: {\n      dashboardData: DashboardDataResolver,\n    },\n  },\n\n  { path: \"**\", redirectTo: \"\", pathMatch: \"full\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    SharedModule,\n    FormsModule,\n    NgbModule,\n  ],\n  bootstrap: [DashboardComponent],\n})\nexport class DashboardModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { ApiEndPoints } from \"src/app/core/constants/api-endpoints\";\nimport { filter } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DashboardService {\n  constructor(private http: HttpClient) {}\n\n  // get dashboard data results\n  getDashboardData(): Observable<any> {\n    return this.http.get(ApiEndPoints.dashboard);\n  }\n\n  // get each doctors accepted time\n  getDoctorsAcceptedTime(filters): Observable<any> {\n    const params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.doctorAcceptTime, { params });\n  }\n\n  // get each doctors averahge schedule appointment time\n  getDoctorsAvgScheduleTime(filters): Observable<any> {\n    const params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.doctorAvgScheduleTime, { params });\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  /* height: 200px; */\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n  cursor: auto;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.dashboard-val {\\n  color: #1b346a;\\n  font-size: 24px;\\n}\\n\\n.w-100 {\\n  width: 100%;\\n}\\n\\n.right-content-Wrap {\\n  padding-top: 0 !important;\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFDQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUNBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFDQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9kYXNoYm9hcmQvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdEFUeXBlIC5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgLyogaGVpZ2h0OiAyMDBweDsgKi9cbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnNlbGVjdEFUeXBlIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAyNXB4O1xuICBtYXJnaW46IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZGZkZmQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlOGU4ZTg7XG4gIGN1cnNvcjogYXV0bztcbn1cbi5kZXRhaWxXcmFwQ29tbW9uIC5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG4uZGV0YWlsV3JhcENvbW1vbi5ib3JkZXItQ0FDQ0NGIHtcbiAgYm9yZGVyOiAycHggc29saWQgI2NhY2NjZjtcbn1cblxuLkgzMDAge1xuICBmb250LXNpemU6IDEuM3JlbTtcbiAgY29sb3I6ICMxYjM0NmE7XG59XG5cbi5kYXNoYm9hcmQtdmFsIHtcbiAgY29sb3I6ICMxYjM0NmE7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cbi53LTEwMCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucmlnaHQtY29udGVudC1XcmFwIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbn1cbi5ub0RhdGEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTAlO1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DashboardService } from \"../dashboard.service\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  data;\n  doctors = [];\n  currentPage = 1;\n  totalRecords = 0;\n  searchText = \"\";\n  active = 1;\n  doctorSchedules = [];\n  constructor(\n    private dashboardService: DashboardService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.activatedRoute.data.subscribe((data) => {\n      this.data = data.dashboardData.data;\n      var hours = Math.floor(this.data.avgAcceptanceTime / 60);\n      var minutes = this.data.avgAcceptanceTime % 60;\n      this.data.avgAcceptanceTime = this.convertSeconds(\n        this.data.avgAcceptanceTime\n      );\n    });\n  }\n\n  activeIdChange(activeId) {\n    this.currentPage = 1;\n\n    if (activeId === 1) {\n      this.getDoctorsAcceptedTime({});\n    } else {\n      this.getDoctorsScheduleTime({});\n    }\n  }\n\n  convertSeconds(d) {\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor((d % 3600) / 60);\n    var s = Math.floor((d % 3600) % 60);\n\n    var hDisplay = h > 0 ? h + (h == 1 ? \" hour, \" : \" hours, \") : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" minute, \" : \" minutes, \") : \"\";\n    var sDisplay = s > 0 ? s + (s == 1 ? \" second\" : \" seconds\") : \"\";\n    return hDisplay + mDisplay + sDisplay;\n  }\n\n  ngOnInit() {\n    this.getDoctorsAcceptedTime({});\n  }\n\n  // get doctors request accepted time\n  getDoctorsAcceptedTime(filter?) {\n    filter.search = this.searchText;\n    filter.pageNumber = this.currentPage;\n    this.dashboardService.getDoctorsAcceptedTime(filter).subscribe((data) => {\n      data.data.data.forEach((item) => {\n        item.avgAcceptaceTime = this.convertSeconds(\n          item.avgAcceptaceTime ? item.avgAcceptaceTime : 0\n        );\n      });\n      this.doctors = data.data.data;\n      this.totalRecords = data.data.count;\n    });\n  }\n\n  // get doctors request avg scehdule time\n  getDoctorsScheduleTime(filter?) {\n    filter.search = this.searchText;\n    filter.pageNumber = this.currentPage;\n    this.dashboardService\n      .getDoctorsAvgScheduleTime(filter)\n      .subscribe((data) => {\n        data.data.data.forEach((item) => {\n          item.avgScheduleTime = this.convertSeconds(\n            item.avgScheduleTime ? item.avgScheduleTime : 0\n          );\n        });\n        this.doctorSchedules = data.data.data;\n        this.totalRecords = data.data.count;\n      });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    if (this.active === 1) {\n      this.getDoctorsAcceptedTime({});\n    } else {\n      this.getDoctorsScheduleTime({});\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CommonService } from \"../services/common.service\";\nimport { map } from \"rxjs/internal/operators/map\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { DashboardService } from \"src/app/admin/dashboard/dashboard.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DashboardDataResolver implements Resolve<any> {\n  constructor(private dashboard: DashboardService) {}\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> | Promise<any> | any {\n    return this.dashboard.getDashboardData().pipe(\n      map((data) => {\n        return data;\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"dashboard-dashboard-module-es5.js"}