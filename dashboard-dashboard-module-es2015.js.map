{"version":3,"sources":["./src/app/admin/dashboard/dashboard/dashboard.component.html","./src/app/admin/dashboard/dashboard-routing.module.ts","./src/app/admin/dashboard/dashboard.module.ts","./src/app/admin/dashboard/dashboard.service.ts","./src/app/admin/dashboard/dashboard/dashboard.component.css","./src/app/admin/dashboard/dashboard/dashboard.component.ts","./src/app/core/resolvers/dashboard-data.resolver.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-es2015.js","sourcesContent":["export default \"<div class=\\\"selectAType pt-0 bg-grey\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <a class=\\\"hovover\\\">\\n        <div class=\\\"detailWrapCommon\\\">\\n          <div class=\\\"text-center w-100\\\">\\n            <h3 class=\\\"H300 semibold\\\">Total Inquiries</h3>\\n            <div class=\\\"dashboard-val\\\">{{ data.totalInquiry }}</div>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <a class=\\\"hovover\\\">\\n        <div class=\\\"detailWrapCommon\\\">\\n          <div class=\\\"text-center w-100\\\">\\n            <h3 class=\\\"H300 semibold\\\">Total Registration Requests</h3>\\n            <div class=\\\"dashboard-val\\\">{{ data.totalRequest }}</div>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <a class=\\\"hovover\\\">\\n        <div class=\\\"detailWrapCommon\\\">\\n          <div class=\\\"text-center w-100\\\">\\n            <h3 class=\\\"H300 semibold\\\">Total Approved Registrations</h3>\\n            <div class=\\\"dashboard-val\\\">{{ data.totalApprovedDoctors }}</div>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <a class=\\\"hovover\\\">\\n        <div class=\\\"detailWrapCommon\\\">\\n          <div class=\\\"text-center w-100\\\">\\n            <h3 class=\\\"H300 semibold\\\">\\n              Average Time taken by clinician to accept a request\\n            </h3>\\n            <div class=\\\"dashboard-val\\\">\\n              {{ data.avgAcceptanceTime }}\\n            </div>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"right-content-Wrap bg-grey\\\">\\n  <div class=\\\"table-wrap\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header blue-bg d-flex align-items-center\\\">\\n        Clinicians Average Report\\n        <div class=\\\"ml-auto\\\"></div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-md-12 text-right\\\">\\n            <div\\n              class=\\\"filterWrap d-flex align-items-center justify-content-end\\\"\\n            ></div>\\n          </div>\\n        </div>\\n\\n        <ul\\n          ngbNav\\n          #nav=\\\"ngbNav\\\"\\n          [(activeId)]=\\\"active\\\"\\n          (activeIdChange)=\\\"activeIdChange(active)\\\"\\n          class=\\\"nav-tabs\\\"\\n        >\\n          <li [ngbNavItem]=\\\"1\\\">\\n            <a ngbNavLink>Average Acceptance Report</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                *ngIf=\\\"doctors?.length; else nodata\\\"\\n                class=\\\"table-responsive entity-table\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Clinician Name</th>\\n                      <th class=\\\"\\\">Clinician Email</th>\\n                      <th class=\\\"\\\">Average Acceptance Time</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let doctor of doctors; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ doctor?.assignedDoctor?.name }}</td>\\n                      <td>{{ doctor?.assignedDoctor?.email }}</td>\\n                      <td>\\n                        {{\\n                          doctor?.avgAcceptaceTime\\n                            ? doctor?.avgAcceptaceTime\\n                            : \\\"0.00\\\"\\n                        }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctors\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                ></app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n\\n          <li [ngbNavItem]=\\\"2\\\">\\n            <a ngbNavLink>Average Schedule Report</a>\\n            <ng-template ngbNavContent>\\n              <div\\n                *ngIf=\\\"doctorSchedules?.length; else nodata\\\"\\n                class=\\\"table-responsive entity-table\\\"\\n              >\\n                <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th class=\\\"\\\">#</th>\\n                      <th class=\\\"\\\">Clinician Name</th>\\n                      <th class=\\\"\\\">Clinician Email</th>\\n                      <th class=\\\"\\\">Average Schedule Time</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let doctor of doctorSchedules; let i = index\\\">\\n                      <td>{{ (currentPage - 1) * 20 + (i + 1) }}</td>\\n                      <td>{{ doctor?.assignedDoctor?.name }}</td>\\n                      <td>{{ doctor?.assignedDoctor?.email }}</td>\\n                      <td>\\n                        {{\\n                          doctor?.avgScheduleTime\\n                            ? doctor?.avgScheduleTime\\n                            : \\\"0.00\\\"\\n                        }}\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <app-pagination\\n                  [totalRecords]=\\\"totalRecords\\\"\\n                  [data]=\\\"doctorSchedules\\\"\\n                  [currentPage]=\\\"currentPage\\\"\\n                  (clickedPage)=\\\"clickPage($event)\\\"\\n                ></app-pagination>\\n              </div>\\n            </ng-template>\\n          </li>\\n        </ul>\\n        <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n        <ng-template #nodata>\\n          <div class=\\\"noData\\\">No Records found</div>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { DashboardDataResolver } from \"src/app/core/resolvers/dashboard-data.resolver\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: DashboardComponent,\n    resolve: {\n      dashboardData: DashboardDataResolver,\n    },\n  },\n\n  { path: \"**\", redirectTo: \"\", pathMatch: \"full\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    SharedModule,\n    FormsModule,\n    NgbModule,\n  ],\n  bootstrap: [DashboardComponent],\n})\nexport class DashboardModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { ApiEndPoints } from \"src/app/core/constants/api-endpoints\";\nimport { filter } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DashboardService {\n  constructor(private http: HttpClient) {}\n\n  // get dashboard data results\n  getDashboardData(): Observable<any> {\n    return this.http.get(ApiEndPoints.dashboard);\n  }\n\n  // get each doctors accepted time\n  getDoctorsAcceptedTime(filters): Observable<any> {\n    const params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.doctorAcceptTime, { params });\n  }\n\n  // get each doctors averahge schedule appointment time\n  getDoctorsAvgScheduleTime(filters): Observable<any> {\n    const params: HttpParams = filters;\n    return this.http.get(ApiEndPoints.doctorAvgScheduleTime, { params });\n  }\n}\n","export default \".selectAType .detailWrapCommon {\\n  /* height: 200px; */\\n  display: flex;\\n}\\n\\n.selectAType a {\\n  text-decoration: none;\\n}\\n\\n.detailWrapCommon {\\n  border-radius: 8px;\\n  padding: 25px;\\n  margin: 25px;\\n  background: #fdfdfd;\\n  border: 2px solid #e8e8e8;\\n  cursor: auto;\\n}\\n\\n.detailWrapCommon .heading {\\n  display: flex;\\n  align-items: flex-start;\\n  padding-right: 10px;\\n}\\n\\n.detailWrapCommon.border-CACCCF {\\n  border: 2px solid #cacccf;\\n}\\n\\n.H300 {\\n  font-size: 1.3rem;\\n  color: #1b346a;\\n}\\n\\n.dashboard-val {\\n  color: #1b346a;\\n  font-size: 24px;\\n}\\n\\n.w-100 {\\n  width: 100%;\\n}\\n\\n.right-content-Wrap {\\n  padding-top: 0 !important;\\n}\\n\\n.noData {\\n  text-align: center;\\n  margin: 10%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFDQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUNBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFDQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9kYXNoYm9hcmQvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdEFUeXBlIC5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgLyogaGVpZ2h0OiAyMDBweDsgKi9cbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnNlbGVjdEFUeXBlIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5kZXRhaWxXcmFwQ29tbW9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAyNXB4O1xuICBtYXJnaW46IDI1cHg7XG4gIGJhY2tncm91bmQ6ICNmZGZkZmQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlOGU4ZTg7XG4gIGN1cnNvcjogYXV0bztcbn1cbi5kZXRhaWxXcmFwQ29tbW9uIC5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG4uZGV0YWlsV3JhcENvbW1vbi5ib3JkZXItQ0FDQ0NGIHtcbiAgYm9yZGVyOiAycHggc29saWQgI2NhY2NjZjtcbn1cblxuLkgzMDAge1xuICBmb250LXNpemU6IDEuM3JlbTtcbiAgY29sb3I6ICMxYjM0NmE7XG59XG5cbi5kYXNoYm9hcmQtdmFsIHtcbiAgY29sb3I6ICMxYjM0NmE7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cbi53LTEwMCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucmlnaHQtY29udGVudC1XcmFwIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbn1cbi5ub0RhdGEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTAlO1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DashboardService } from \"../dashboard.service\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  data;\n  doctors = [];\n  currentPage = 1;\n  totalRecords = 0;\n  searchText = \"\";\n  active = 1;\n  doctorSchedules = [];\n  constructor(\n    private dashboardService: DashboardService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.activatedRoute.data.subscribe((data) => {\n      this.data = data.dashboardData.data;\n      var hours = Math.floor(this.data.avgAcceptanceTime / 60);\n      var minutes = this.data.avgAcceptanceTime % 60;\n      this.data.avgAcceptanceTime = this.convertSeconds(\n        this.data.avgAcceptanceTime\n      );\n    });\n  }\n\n  activeIdChange(activeId) {\n    this.currentPage = 1;\n\n    if (activeId === 1) {\n      this.getDoctorsAcceptedTime({});\n    } else {\n      this.getDoctorsScheduleTime({});\n    }\n  }\n\n  convertSeconds(d) {\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor((d % 3600) / 60);\n    var s = Math.floor((d % 3600) % 60);\n\n    var hDisplay = h > 0 ? h + (h == 1 ? \" hour, \" : \" hours, \") : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" minute, \" : \" minutes, \") : \"\";\n    var sDisplay = s > 0 ? s + (s == 1 ? \" second\" : \" seconds\") : \"\";\n    return hDisplay + mDisplay + sDisplay;\n  }\n\n  ngOnInit() {\n    this.getDoctorsAcceptedTime({});\n  }\n\n  // get doctors request accepted time\n  getDoctorsAcceptedTime(filter?) {\n    filter.search = this.searchText;\n    filter.pageNumber = this.currentPage;\n    this.dashboardService.getDoctorsAcceptedTime(filter).subscribe((data) => {\n      data.data.data.forEach((item) => {\n        item.avgAcceptaceTime = this.convertSeconds(\n          item.avgAcceptaceTime ? item.avgAcceptaceTime : 0\n        );\n      });\n      this.doctors = data.data.data;\n      this.totalRecords = data.data.count;\n    });\n  }\n\n  // get doctors request avg scehdule time\n  getDoctorsScheduleTime(filter?) {\n    filter.search = this.searchText;\n    filter.pageNumber = this.currentPage;\n    this.dashboardService\n      .getDoctorsAvgScheduleTime(filter)\n      .subscribe((data) => {\n        data.data.data.forEach((item) => {\n          item.avgScheduleTime = this.convertSeconds(\n            item.avgScheduleTime ? item.avgScheduleTime : 0\n          );\n        });\n        this.doctorSchedules = data.data.data;\n        this.totalRecords = data.data.count;\n      });\n  }\n\n  // method called via event emitter from pagination component\n  clickPage(pageNo) {\n    this.currentPage = pageNo;\n    if (this.active === 1) {\n      this.getDoctorsAcceptedTime({});\n    } else {\n      this.getDoctorsScheduleTime({});\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CommonService } from \"../services/common.service\";\nimport { map } from \"rxjs/internal/operators/map\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { DashboardService } from \"src/app/admin/dashboard/dashboard.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DashboardDataResolver implements Resolve<any> {\n  constructor(private dashboard: DashboardService) {}\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> | Promise<any> | any {\n    return this.dashboard.getDashboardData().pipe(\n      map((data) => {\n        return data;\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}